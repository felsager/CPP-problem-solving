Flat profile:

Each sample counts as 0.01 seconds.
  %   cumulative   self              self     total           
 time   seconds   seconds    calls   s/call   s/call  name    
 76.66     12.45    12.45                             _mcount_private
 11.33     14.29     1.84                             __fentry__
  1.85     14.59     0.30 400011413     0.00     0.00  std::bitset<200000ull>::test(unsigned long long) const
  1.85     14.89     0.30        1     0.30     1.95  winning_instances(std::vector<int, std::allocator<int> > const&, int)
  1.60     15.15     0.26 400011413     0.00     0.00  std::bitset<200000ull>::_Unchecked_test(unsigned long long) const
  1.48     15.39     0.24 400031413     0.00     0.00  std::_Base_bitset<6250ull>::_S_whichword(unsigned long long)
  1.29     15.60     0.21 400031413     0.00     0.00  std::_Base_bitset<6250ull>::_S_maskbit(unsigned long long)
  1.11     15.78     0.18 400031413     0.00     0.00  std::_Base_bitset<6250ull>::_S_whichbit(unsigned long long)
  1.05     15.95     0.17 400031413     0.00     0.00  std::bitset<200000ull>::_M_check(unsigned long long, char const*) const
  0.86     16.09     0.14 400102826     0.00     0.00  std::vector<int, std::allocator<int> >::operator[](unsigned long long)
  0.86     16.23     0.14 400011413     0.00     0.00  std::_Base_bitset<6250ull>::_M_getword(unsigned long long) const
  0.06     16.24     0.01    81637     0.00     0.00  std::__detail::_Hash_node<int, false>::_M_next() const
  0.00     16.24     0.00   302778     0.00     0.00  int const& std::forward<int const&>(std::remove_reference<int const&>::type&)
  0.00     16.24     0.00    97799     0.00     0.00  int const& std::__detail::_Identity::operator()<int const&>(int const&) const
  0.00     16.24     0.00    80756     0.00     0.00  std::__detail::_Mod_range_hashing::operator()(unsigned long long, unsigned long long) const
  0.00     16.24     0.00    80745     0.00     0.00  std::hash<int>::operator()(int) const
  0.00     16.24     0.00    80745     0.00     0.00  std::__detail::_Hash_code_base<int, int, std::__detail::_Identity, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_hash() const
  0.00     16.24     0.00    80745     0.00     0.00  std::__detail::_Hashtable_ebo_helper<1, std::hash<int>, true>::_M_cget() const
  0.00     16.24     0.00    80003     0.00     0.00  std::__detail::_Node_iterator_base<int, false>::_Node_iterator_base(std::__detail::_Hash_node<int, false>*)
  0.00     16.24     0.00    77799     0.00     0.00  __gnu_cxx::__aligned_buffer<int>::_M_ptr() const
  0.00     16.24     0.00    77799     0.00     0.00  __gnu_cxx::__aligned_buffer<int>::_M_addr() const
  0.00     16.24     0.00    77799     0.00     0.00  std::__detail::_Hash_node_value_base<int>::_M_v() const
  0.00     16.24     0.00    77799     0.00     0.00  std::__detail::_Hash_node_value_base<int>::_M_valptr() const
  0.00     16.24     0.00    60745     0.00     0.00  std::__detail::_Hash_code_base<int, int, std::__detail::_Identity, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_hash_code(int const&) const
  0.00     16.24     0.00    60010     0.00     0.00  std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<int, false> > >::_M_node_allocator()
  0.00     16.24     0.00    60010     0.00     0.00  std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<int, false> >, true>::_M_get()
  0.00     16.24     0.00    60003     0.00     0.00  std::__detail::_Node_iterator<int, true, false>::_Node_iterator(std::__detail::_Hash_node<int, false>*)
  0.00     16.24     0.00    60000     0.00     0.00  std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::size() const
  0.00     16.24     0.00    60000     0.00     0.00  std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::__small_size_threshold()
  0.00     16.24     0.00    60000     0.00     0.00  std::__detail::_Hashtable_hash_traits<std::hash<int> >::__small_size_threshold()
  0.00     16.24     0.00    40745     0.00     0.00  std::__detail::_Hash_code_base<int, int, std::__detail::_Identity, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(std::__detail::_Hash_node_value<int, false> const&, unsigned long long) const
  0.00     16.24     0.00    40011     0.00     0.00  std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_bucket_index(unsigned long long) const
  0.00     16.24     0.00    40011     0.00     0.00  std::__detail::_Hash_code_base<int, int, std::__detail::_Identity, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(unsigned long long, unsigned long long) const
  0.00     16.24     0.00    40000     0.00     0.00  std::bitset<400000ull>::_M_check(unsigned long long, char const*) const
  0.00     16.24     0.00    40000     0.00     0.00  std::vector<int, std::allocator<int> >::operator[](unsigned long long) const
  0.00     16.24     0.00    40000     0.00     0.00  std::_Base_bitset<12500ull>::_S_maskbit(unsigned long long)
  0.00     16.24     0.00    40000     0.00     0.00  std::_Base_bitset<12500ull>::_S_whichbit(unsigned long long)
  0.00     16.24     0.00    40000     0.00     0.00  std::_Base_bitset<12500ull>::_S_whichword(unsigned long long)
  0.00     16.24     0.00    37054     0.00     0.00  std::__detail::_Hashtable_base<int, int, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, true, true> >::_M_eq() const
  0.00     16.24     0.00    37054     0.00     0.00  std::__detail::_Hashtable_ebo_helper<0, std::equal_to<int>, true>::_M_cget() const
  0.00     16.24     0.00    37054     0.00     0.00  std::equal_to<int>::operator()(int const&, int const&) const
  0.00     16.24     0.00    37054     0.00     0.00  std::__detail::_Hashtable_base<int, int, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, true, true> >::_S_equals(unsigned long long, std::__detail::_Hash_node_code_cache<false> const&)
  0.00     16.24     0.00    29997     0.00     0.00  operator new(unsigned long long, void*)
  0.00     16.24     0.00    29994     0.00     0.00  __gnu_cxx::__aligned_buffer<int>::_M_ptr()
  0.00     16.24     0.00    29994     0.00     0.00  __gnu_cxx::__aligned_buffer<int>::_M_addr()
  0.00     16.24     0.00    29994     0.00     0.00  std::__detail::_Hash_node_value_base<int>::_M_valptr()
  0.00     16.24     0.00    23475     0.00     0.00  std::__detail::_Hashtable_base<int, int, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, true, true> >::_M_key_equals(int const&, std::__detail::_Hash_node_value<int, false> const&) const
  0.00     16.24     0.00    23475     0.00     0.00  std::__detail::_Hashtable_base<int, int, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, true, true> >::_M_equals(int const&, unsigned long long, std::__detail::_Hash_node_value<int, false> const&) const
  0.00     16.24     0.00    20893     0.00     0.00  std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_bucket_index(std::__detail::_Hash_node_value<int, false> const&) const
  0.00     16.24     0.00    20002     0.00     0.00  std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::end()
  0.00     16.24     0.00    20001     0.00     0.00  std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> >::end()
  0.00     16.24     0.00    20001     0.00     0.00  std::__detail::operator!=(std::__detail::_Node_iterator_base<int, false> const&, std::__detail::_Node_iterator_base<int, false> const&)
  0.00     16.24     0.00    20000     0.00     0.00  std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_find_node(unsigned long long, int const&, unsigned long long) const
  0.00     16.24     0.00    20000     0.00     0.00  std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_find_before_node(unsigned long long, int const&, unsigned long long) const
  0.00     16.24     0.00    20000     0.00     0.00  std::_Base_bitset<12500ull>::_M_getword(unsigned long long) const
  0.00     16.24     0.00    20000     0.00     0.00  std::bitset<400000ull>::_Unchecked_test(unsigned long long) const
  0.00     16.24     0.00    20000     0.00     0.00  std::bitset<400000ull>::test(unsigned long long) const
  0.00     16.24     0.00    20000     0.00     0.00  unsigned long long std::__detail::_Hash_code_base<int, int, std::__detail::_Identity, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_hash_code_tr<int>(int const&) const
  0.00     16.24     0.00    20000     0.00     0.00  int const& std::__detail::_ConvertToValueType<std::__detail::_Identity, int>::operator()<int const&>(int const&) const
  0.00     16.24     0.00    20000     0.00     0.00  std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_S_forward_key(int const&)
  0.00     16.24     0.00    20000     0.00     0.00  std::pair<std::__detail::_Node_iterator<int, true, false>, bool> std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert_unique<int const&, int const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<int, false> > > >(int const&, int const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<int, false> > > const&)
  0.00     16.24     0.00    20000     0.00     0.00  std::pair<std::__detail::_Node_iterator<int, true, false>, bool> std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert_unique_aux<int const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<int, false> > > >(int const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<int, false> > > const&)
  0.00     16.24     0.00    20000     0.00     0.00  std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::find(int const&)
  0.00     16.24     0.00    20000     0.00     0.00  std::__detail::_Node_iterator<int, true, false> std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert<int const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<int, false> > > >(std::__detail::_Node_const_iterator<int, true, false>, int const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<int, false> > > const&, std::integral_constant<bool, true>)
  0.00     16.24     0.00    20000     0.00     0.00  std::pair<std::__detail::_Node_iterator<int, true, false>, bool> std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert<int const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<int, false> > > >(int const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<int, false> > > const&, std::integral_constant<bool, true>)
  0.00     16.24     0.00    20000     0.00     0.00  std::_Base_bitset<12500ull>::_M_getword(unsigned long long)
  0.00     16.24     0.00    20000     0.00     0.00  std::_Base_bitset<12500ull>::_M_do_reset()
  0.00     16.24     0.00    20000     0.00     0.00  std::_Base_bitset<6250ull>::_M_getword(unsigned long long)
  0.00     16.24     0.00    20000     0.00     0.00  std::_Base_bitset<6250ull>::_M_do_reset()
  0.00     16.24     0.00    20000     0.00     0.00  std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> >::find(int const&)
  0.00     16.24     0.00    20000     0.00     0.00  std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> >::insert(std::__detail::_Node_const_iterator<int, true, false>, int const&)
  0.00     16.24     0.00    20000     0.00     0.00  std::insert_iterator<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > >::operator=(int const&)
  0.00     16.24     0.00    20000     0.00     0.00  std::insert_iterator<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > >::operator*()
  0.00     16.24     0.00    20000     0.00     0.00  std::insert_iterator<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > >::operator++()
  0.00     16.24     0.00    20000     0.00     0.00  std::bitset<200000ull>::_Unchecked_set(unsigned long long, int)
  0.00     16.24     0.00    20000     0.00     0.00  std::bitset<200000ull>::set(unsigned long long, bool)
  0.00     16.24     0.00    20000     0.00     0.00  std::bitset<200000ull>::reset()
  0.00     16.24     0.00    20000     0.00     0.00  std::bitset<400000ull>::_Unchecked_set(unsigned long long, int)
  0.00     16.24     0.00    20000     0.00     0.00  std::bitset<400000ull>::set(unsigned long long, bool)
  0.00     16.24     0.00    20000     0.00     0.00  std::bitset<400000ull>::reset()
  0.00     16.24     0.00    20000     0.00     0.00  std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<int, false> > >::_AllocNode(std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<int, false> > >&)
  0.00     16.24     0.00    20000     0.00     0.00  std::__detail::_Insert_base<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_conjure_hashtable()
  0.00     16.24     0.00    20000     0.00     0.00  std::__detail::_Insert_base<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::insert(std::__detail::_Node_const_iterator<int, true, false>, int const&)
  0.00     16.24     0.00    20000     0.00     0.00  std::__detail::_Node_iterator<int, true, false>::operator++()
  0.00     16.24     0.00    20000     0.00     0.00  std::__detail::_Node_iterator_base<int, false>::_M_incr()
  0.00     16.24     0.00    20000     0.00     0.00  std::__detail::_Node_const_iterator<int, true, false>::_Node_const_iterator(std::__detail::_Node_iterator<int, true, false> const&)
  0.00     16.24     0.00    20000     0.00     0.00  bool&& std::forward<bool>(std::remove_reference<bool>::type&)
  0.00     16.24     0.00    19999     0.00     0.00  std::__detail::_Hash_node<int, false>* std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_find_node_tr<int>(unsigned long long, int const&, unsigned long long) const
  0.00     16.24     0.00    19999     0.00     0.00  std::__detail::_Hash_node_base* std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_find_before_node_tr<int>(unsigned long long, int const&, unsigned long long) const
  0.00     16.24     0.00    14997     0.00     0.00  std::__detail::_Hash_node<int, false>* std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<int, false> > >::operator()<int const&>(int const&) const
  0.00     16.24     0.00    14997     0.00     0.00  std::__detail::_Hash_code_base<int, int, std::__detail::_Identity, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_store_code(std::__detail::_Hash_node_code_cache<false>&, unsigned long long) const
  0.00     16.24     0.00    14997     0.00     0.00  std::__detail::_Prime_rehash_policy::_M_state() const
  0.00     16.24     0.00    14997     0.00     0.00  std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_Scoped_node::_Scoped_node(std::__detail::_Hash_node<int, false>*, std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<int, false> > >*)
  0.00     16.24     0.00    14997     0.00     0.00  std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_Scoped_node::~_Scoped_node()
  0.00     16.24     0.00    14997     0.00     0.00  std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert_unique_node(unsigned long long, unsigned long long, std::__detail::_Hash_node<int, false>*, unsigned long long)
  0.00     16.24     0.00    14997     0.00     0.00  std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert_bucket_begin(unsigned long long, std::__detail::_Hash_node<int, false>*)
  0.00     16.24     0.00    14997     0.00     0.00  std::__new_allocator<std::__detail::_Hash_node<int, false> >::deallocate(std::__detail::_Hash_node<int, false>*, unsigned long long)
  0.00     16.24     0.00    14997     0.00     0.00  std::__new_allocator<std::__detail::_Hash_node<int, false> >::allocate(unsigned long long, void const*)
  0.00     16.24     0.00    14997     0.00     0.00  std::__ptr_traits_ptr_to<std::__detail::_Hash_node<int, false>*, std::__detail::_Hash_node<int, false>, false>::pointer_to(std::__detail::_Hash_node<int, false>&)
  0.00     16.24     0.00    14997     0.00     0.00  std::pair<std::__detail::_Node_iterator<int, true, false>, bool>::pair<std::__detail::_Node_iterator<int, true, false>&, bool, true>(std::__detail::_Node_iterator<int, true, false>&, bool&&)
  0.00     16.24     0.00    14997     0.00     0.00  std::__detail::_Hash_node<int, false>::_Hash_node()
  0.00     16.24     0.00    14997     0.00     0.00  std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<int, false> > >::__node_type* std::__detail::_NodeBuilder<std::__detail::_Identity>::_S_build<int const&, int const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<int, false> > > >(int const&, int const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<int, false> > > const&)
  0.00     16.24     0.00    14997     0.00     0.00  std::__detail::_Hash_node_base::_Hash_node_base()
  0.00     16.24     0.00    14997     0.00     0.00  std::__detail::_Hash_node<int, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<int, false> > >::_M_allocate_node<int const&>(int const&)
  0.00     16.24     0.00    14997     0.00     0.00  std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<int, false> > >::_M_deallocate_node(std::__detail::_Hash_node<int, false>*)
  0.00     16.24     0.00    14997     0.00     0.00  std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<int, false> > >::_M_deallocate_node_ptr(std::__detail::_Hash_node<int, false>*)
  0.00     16.24     0.00    14997     0.00     0.00  std::__detail::_Hash_node<int, false>* std::__addressof<std::__detail::_Hash_node<int, false> >(std::__detail::_Hash_node<int, false>&)
  0.00     16.24     0.00    14997     0.00     0.00  std::__detail::_Hash_node<int, false>* std::__to_address<std::__detail::_Hash_node<int, false> >(std::__detail::_Hash_node<int, false>*)
  0.00     16.24     0.00    14997     0.00     0.00  std::__detail::_Node_iterator<int, true, false>& std::forward<std::__detail::_Node_iterator<int, true, false>&>(std::remove_reference<std::__detail::_Node_iterator<int, true, false>&>::type&)
  0.00     16.24     0.00    14997     0.00     0.00  std::__detail::_Hash_node<int, false>* std::addressof<std::__detail::_Hash_node<int, false> >(std::__detail::_Hash_node<int, false>&)
  0.00     16.24     0.00    13579     0.00     0.00  bool std::__detail::_Hashtable_base<int, int, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, true, true> >::_M_equals_tr<int>(int const&, unsigned long long, std::__detail::_Hash_node_value<int, false> const&) const
  0.00     16.24     0.00    13579     0.00     0.00  bool std::__detail::_Hashtable_base<int, int, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, true, true> >::_M_key_equals_tr<int>(int const&, std::__detail::_Hash_node_value<int, false> const&) const
  0.00     16.24     0.00     5003     0.00     0.00  std::pair<std::__detail::_Node_iterator<int, true, false>, bool>::pair<std::__detail::_Node_iterator<int, true, false>, bool, true>(std::__detail::_Node_iterator<int, true, false>&&, bool&&)
  0.00     16.24     0.00     5003     0.00     0.00  std::__detail::_Node_iterator<int, true, false>&& std::forward<std::__detail::_Node_iterator<int, true, false> >(std::remove_reference<std::__detail::_Node_iterator<int, true, false> >::type&)
  0.00     16.24     0.00       22     0.00     0.00  std::__new_allocator<std::__detail::_Hash_node_base*>::~__new_allocator()
  0.00     16.24     0.00       13     0.00     0.00  std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_begin() const
  0.00     16.24     0.00       12     0.00     0.00  std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_uses_single_bucket(std::__detail::_Hash_node_base**) const
  0.00     16.24     0.00       12     0.00     0.00  std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned long long)
  0.00     16.24     0.00       12     0.00     0.00  std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_deallocate_buckets()
  0.00     16.24     0.00       11     0.00     0.00  std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_rehash_aux(unsigned long long, std::integral_constant<bool, true>)
  0.00     16.24     0.00       11     0.00     0.00  std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_allocate_buckets(unsigned long long)
  0.00     16.24     0.00       11     0.00     0.00  std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_rehash(unsigned long long, unsigned long long const&)
  0.00     16.24     0.00       11     0.00     0.00  std::__new_allocator<std::__detail::_Hash_node_base*>::deallocate(std::__detail::_Hash_node_base**, unsigned long long)
  0.00     16.24     0.00       11     0.00     0.00  std::__new_allocator<std::__detail::_Hash_node_base*>::allocate(unsigned long long, void const*)
  0.00     16.24     0.00       11     0.00     0.00  std::__ptr_traits_ptr_to<std::__detail::_Hash_node_base**, std::__detail::_Hash_node_base*, false>::pointer_to(std::__detail::_Hash_node_base*&)
  0.00     16.24     0.00       11     0.00     0.00  std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<int, false> > >::_M_allocate_buckets(unsigned long long)
  0.00     16.24     0.00       11     0.00     0.00  std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<int, false> > >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned long long)
  0.00     16.24     0.00       11     0.00     0.00  std::__detail::_Hash_node_base** std::__addressof<std::__detail::_Hash_node_base*>(std::__detail::_Hash_node_base*&)
  0.00     16.24     0.00       11     0.00     0.00  std::__detail::_Hash_node_base** std::__to_address<std::__detail::_Hash_node_base*>(std::__detail::_Hash_node_base**)
  0.00     16.24     0.00       11     0.00     0.00  std::__detail::_Hash_node_base** std::addressof<std::__detail::_Hash_node_base*>(std::__detail::_Hash_node_base*&)
  0.00     16.24     0.00        9     0.00     0.00  std::__new_allocator<int>::~__new_allocator()
  0.00     16.24     0.00        6     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator()
  0.00     16.24     0.00        4     0.00     0.00  __gnu_cxx::__enable_if<std::__is_scalar<int>::__value, void>::__type std::__fill_a1<int*, int>(int*, int*, int const&)
  0.00     16.24     0.00        3     0.00     0.00  void std::_Destroy_aux<true>::__destroy<int*>(int*, int*)
  0.00     16.24     0.00        3     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long long)
  0.00     16.24     0.00        3     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl(std::allocator<int> const&)
  0.00     16.24     0.00        3     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl()
  0.00     16.24     0.00        3     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long long)
  0.00     16.24     0.00        3     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned long long)
  0.00     16.24     0.00        3     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data()
  0.00     16.24     0.00        3     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long long, std::allocator<int> const&)
  0.00     16.24     0.00        3     0.00     0.00  std::_Vector_base<int, std::allocator<int> >::~_Vector_base()
  0.00     16.24     0.00        3     0.00     0.00  std::__new_allocator<int>::deallocate(int*, unsigned long long)
  0.00     16.24     0.00        3     0.00     0.00  std::__new_allocator<int>::allocate(unsigned long long, void const*)
  0.00     16.24     0.00        3     0.00     0.00  int* std::__uninitialized_default_n_1<true>::__uninit_default_n<int*, unsigned long long>(int*, unsigned long long)
  0.00     16.24     0.00        3     0.00     0.00  std::vector<int, std::allocator<int> >::_S_max_size(std::allocator<int> const&)
  0.00     16.24     0.00        3     0.00     0.00  std::vector<int, std::allocator<int> >::_S_check_init_len(unsigned long long, std::allocator<int> const&)
  0.00     16.24     0.00        3     0.00     0.00  std::vector<int, std::allocator<int> >::_M_default_initialize(unsigned long long)
  0.00     16.24     0.00        3     0.00     0.00  std::vector<int, std::allocator<int> >::vector(unsigned long long, std::allocator<int> const&)
  0.00     16.24     0.00        3     0.00     0.00  std::vector<int, std::allocator<int> >::~vector()
  0.00     16.24     0.00        3     0.00     0.00  void std::_Construct<int>(int*)
  0.00     16.24     0.00        3     0.00     0.00  int* std::__fill_n_a<int*, unsigned long long, int>(int*, unsigned long long, int const&, std::random_access_iterator_tag)
  0.00     16.24     0.00        3     0.00     0.00  int* std::__addressof<int>(int&)
  0.00     16.24     0.00        3     0.00     0.00  std::__size_to_integer(unsigned long long)
  0.00     16.24     0.00        3     0.00     0.00  int* std::__uninitialized_default_n<int*, unsigned long long>(int*, unsigned long long)
  0.00     16.24     0.00        3     0.00     0.00  int* std::__uninitialized_default_n_a<int*, unsigned long long, int>(int*, unsigned long long, std::allocator<int>&)
  0.00     16.24     0.00        3     0.00     0.00  unsigned long long const& std::min<unsigned long long>(unsigned long long const&, unsigned long long const&)
  0.00     16.24     0.00        3     0.00     0.00  int* std::fill_n<int*, unsigned long long, int>(int*, unsigned long long, int const&)
  0.00     16.24     0.00        3     0.00     0.00  void std::_Destroy<int*>(int*, int*)
  0.00     16.24     0.00        3     0.00     0.00  void std::__fill_a<int*, int>(int*, int*, int const&)
  0.00     16.24     0.00        2     0.00     0.00  __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator(int const* const&)
  0.00     16.24     0.00        2     0.00     0.00  __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&)
  0.00     16.24     0.00        2     0.00     0.00  __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base() const
  0.00     16.24     0.00        2     0.00     0.00  __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const
  0.00     16.24     0.00        2     0.00     0.00  __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
  0.00     16.24     0.00        2     0.00     0.00  int const* std::__niter_base<int const*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
  0.00     16.24     0.00        1     0.00     0.00  std::vector<int, std::allocator<int> >::end() const
  0.00     16.24     0.00        1     0.00     0.00  std::vector<int, std::allocator<int> >::begin() const
  0.00     16.24     0.00        1     0.00     0.00  std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::begin()
  0.00     16.24     0.00        1     0.00     0.00  std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::clear()
  0.00     16.24     0.00        1     0.00     0.00  std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_Hashtable()
  0.00     16.24     0.00        1     0.00     0.00  std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::~_Hashtable()
  0.00     16.24     0.00        1     0.00     0.01  std::insert_iterator<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > > std::__copy_move<false, false, std::random_access_iterator_tag>::__copy_m<int const*, std::insert_iterator<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > > >(int const*, int const*, std::insert_iterator<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > >)
  0.00     16.24     0.00        1     0.00     0.00  std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> >::unordered_set()
  0.00     16.24     0.00        1     0.00     0.00  std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> >::~unordered_set()
  0.00     16.24     0.00        1     0.00     0.00  std::__new_allocator<std::__detail::_Hash_node<int, false> >::~__new_allocator()
  0.00     16.24     0.00        1     0.00     0.00  std::insert_iterator<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > >::insert_iterator(std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> >&, std::__detail::_Node_iterator<int, true, false>)
  0.00     16.24     0.00        1     0.00     0.00  std::vector<int, std::allocator<int> >::end()
  0.00     16.24     0.00        1     0.00     0.00  std::vector<int, std::allocator<int> >::begin()
  0.00     16.24     0.00        1     0.00     0.00  std::__detail::_Hash_code_base<int, int, std::__detail::_Identity, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_Hash_code_base()
  0.00     16.24     0.00        1     0.00     0.00  std::__detail::_Hash_node_base::_Hash_node_base()
  0.00     16.24     0.00        1     0.00     0.00  std::__detail::_Hashtable_base<int, int, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, true, true> >::_Hashtable_base()
  0.00     16.24     0.00        1     0.00     0.00  std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<int, false> > >::_M_deallocate_nodes(std::__detail::_Hash_node<int, false>*)
  0.00     16.24     0.00        1     0.00     0.00  std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<int, false> > >::_Hashtable_alloc()
  0.00     16.24     0.00        1     0.00     0.00  std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<int, false> > >::~_Hashtable_alloc()
  0.00     16.24     0.00        1     0.00     0.00  std::__detail::_Prime_rehash_policy::_Prime_rehash_policy(float)
  0.00     16.24     0.00        1     0.00     0.00  std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<int, false> >, true>::_Hashtable_ebo_helper()
  0.00     16.24     0.00        1     0.00     0.00  std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<int, false> >, true>::~_Hashtable_ebo_helper()
  0.00     16.24     0.00        1     0.00     0.00  std::__detail::_Hashtable_ebo_helper<0, std::equal_to<int>, true>::_Hashtable_ebo_helper()
  0.00     16.24     0.00        1     0.00     0.00  std::__detail::_Hashtable_ebo_helper<1, std::hash<int>, true>::_Hashtable_ebo_helper()
  0.00     16.24     0.00        1     0.00     0.00  std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> >* std::__addressof<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > >(std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> >&)
  0.00     16.24     0.00        1     0.00     0.00  std::insert_iterator<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > > std::__niter_base<std::insert_iterator<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > > >(std::insert_iterator<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > >)
  0.00     16.24     0.00        1     0.00     0.00  std::insert_iterator<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > > std::__niter_wrap<std::insert_iterator<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > > >(std::insert_iterator<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > > const&, std::insert_iterator<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > >)
  0.00     16.24     0.00        1     0.00     0.01  std::insert_iterator<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > > std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, std::insert_iterator<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, std::insert_iterator<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > >)
  0.00     16.24     0.00        1     0.00     0.01  std::insert_iterator<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > > std::__copy_move_a1<false, int const*, std::insert_iterator<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > > >(int const*, int const*, std::insert_iterator<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > >)
  0.00     16.24     0.00        1     0.00     0.01  std::insert_iterator<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > > std::__copy_move_a2<false, int const*, std::insert_iterator<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > > >(int const*, int const*, std::insert_iterator<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > >)
  0.00     16.24     0.00        1     0.00     0.01  std::insert_iterator<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > > std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, std::insert_iterator<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, std::insert_iterator<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > >)
  0.00     16.24     0.00        1     0.00     0.00  void std::fill<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)
  0.00     16.24     0.00        1     0.00     0.00  void std::__fill_a<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)
  0.00     16.24     0.00        1     0.00     0.00  std::insert_iterator<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > > std::inserter<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > >(std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> >&, std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> >::iterator)
  0.00     16.24     0.00        1     0.00     0.00  void std::__fill_a1<int*, std::vector<int, std::allocator<int> >, int>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)
  0.00     16.24     0.00        1     0.00     0.00  __gcc_deregister_frame

 %         the percentage of the total running time of the
time       program used by this function.

cumulative a running sum of the number of seconds accounted
 seconds   for by this function and those listed above it.

 self      the number of seconds accounted for by this
seconds    function alone.  This is the major sort for this
           listing.

calls      the number of times this function was invoked, if
           this function is profiled, else blank.

 self      the average number of milliseconds spent in this
ms/call    function per call, if this function is profiled,
	   else blank.

 total     the average number of milliseconds spent in this
ms/call    function and its descendents per call, if this
	   function is profiled, else blank.

name       the name of the function.  This is the minor sort
           for this listing. The index shows the location of
	   the function in the gprof listing. If the index is
	   in parenthesis it shows where it would appear in
	   the gprof listing if it were to be printed.

Copyright (C) 2012-2023 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

		     Call graph (explanation follows)


granularity: each sample hit covers 4 byte(s) for 0.06% of 16.24 seconds

index % time    self  children    called     name
                                                 <spontaneous>
[1]     76.7   12.45    0.00                 _mcount_private [1]
-----------------------------------------------
                                                 <spontaneous>
[2]     12.0    0.00    1.95                 main [2]
                0.30    1.65       1/1           winning_instances(std::vector<int, std::allocator<int> > const&, int) [3]
                0.00    0.00   20000/400102826     std::vector<int, std::allocator<int> >::operator[](unsigned long long) [12]
                0.00    0.00       1/1           __gcc_deregister_frame [276]
                0.00    0.00       1/3           std::vector<int, std::allocator<int> >::vector(unsigned long long, std::allocator<int> const&) [232]
                0.00    0.00       1/9           std::__new_allocator<int>::~__new_allocator() [214]
                0.00    0.00       1/3           std::vector<int, std::allocator<int> >::~vector() [233]
-----------------------------------------------
                0.30    1.65       1/1           main [2]
[3]     12.0    0.30    1.65       1         winning_instances(std::vector<int, std::allocator<int> > const&, int) [3]
                0.30    1.20 400011413/400011413     std::bitset<200000ull>::test(unsigned long long) const [5]
                0.14    0.00 400082826/400102826     std::vector<int, std::allocator<int> >::operator[](unsigned long long) [12]
                0.00    0.01       1/1           std::insert_iterator<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > > std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, std::insert_iterator<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, std::insert_iterator<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > >) [19]
                0.00    0.00       1/1           std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> >::~unordered_set() [33]
                0.00    0.00   20000/20000       std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> >::find(int const&) [41]
                0.00    0.00   20000/20000       std::bitset<200000ull>::set(unsigned long long, bool) [42]
                0.00    0.00   40000/40000       std::vector<int, std::allocator<int> >::operator[](unsigned long long) const [140]
                0.00    0.00   20001/20001       std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> >::end() [156]
                0.00    0.00   20000/20000       std::bitset<200000ull>::reset() [169]
                0.00    0.00   20000/20000       std::bitset<400000ull>::reset() [172]
                0.00    0.00   20000/20001       std::__detail::operator!=(std::__detail::_Node_iterator_base<int, false> const&, std::__detail::_Node_iterator_base<int, false> const&) [157]
                0.00    0.00   20000/20000       std::bitset<400000ull>::test(unsigned long long) const [160]
                0.00    0.00   20000/20000       std::bitset<400000ull>::set(unsigned long long, bool) [171]
                0.00    0.00       2/3           std::vector<int, std::allocator<int> >::vector(unsigned long long, std::allocator<int> const&) [232]
                0.00    0.00       2/9           std::__new_allocator<int>::~__new_allocator() [214]
                0.00    0.00       2/3           std::vector<int, std::allocator<int> >::~vector() [233]
                0.00    0.00       1/1           std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> >::unordered_set() [254]
                0.00    0.00       1/1           std::vector<int, std::allocator<int> >::end() [257]
                0.00    0.00       1/1           std::vector<int, std::allocator<int> >::begin() [258]
                0.00    0.00       1/1           void std::fill<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&) [272]
                0.00    0.00       1/1           std::insert_iterator<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > > std::inserter<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > >(std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> >&, std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> >::iterator) [274]
                0.00    0.00       1/1           std::vector<int, std::allocator<int> >::end() const [250]
                0.00    0.00       1/1           std::vector<int, std::allocator<int> >::begin() const [251]
-----------------------------------------------
                                                 <spontaneous>
[4]     11.3    1.84    0.00                 __fentry__ [4]
-----------------------------------------------
                0.30    1.20 400011413/400011413     winning_instances(std::vector<int, std::allocator<int> > const&, int) [3]
[5]      9.2    0.30    1.20 400011413         std::bitset<200000ull>::test(unsigned long long) const [5]
                0.26    0.77 400011413/400011413     std::bitset<200000ull>::_Unchecked_test(unsigned long long) const [6]
                0.17    0.00 400011413/400031413     std::bitset<200000ull>::_M_check(unsigned long long, char const*) const [11]
-----------------------------------------------
                0.26    0.77 400011413/400011413     std::bitset<200000ull>::test(unsigned long long) const [5]
[6]      6.3    0.26    0.77 400011413         std::bitset<200000ull>::_Unchecked_test(unsigned long long) const [6]
                0.21    0.18 400011413/400031413     std::_Base_bitset<6250ull>::_S_maskbit(unsigned long long) [7]
                0.14    0.24 400011413/400011413     std::_Base_bitset<6250ull>::_M_getword(unsigned long long) const [8]
-----------------------------------------------
                0.00    0.00   20000/400031413     std::bitset<200000ull>::_Unchecked_set(unsigned long long, int) [43]
                0.21    0.18 400011413/400031413     std::bitset<200000ull>::_Unchecked_test(unsigned long long) const [6]
[7]      2.4    0.21    0.18 400031413         std::_Base_bitset<6250ull>::_S_maskbit(unsigned long long) [7]
                0.18    0.00 400031413/400031413     std::_Base_bitset<6250ull>::_S_whichbit(unsigned long long) [10]
-----------------------------------------------
                0.14    0.24 400011413/400011413     std::bitset<200000ull>::_Unchecked_test(unsigned long long) const [6]
[8]      2.3    0.14    0.24 400011413         std::_Base_bitset<6250ull>::_M_getword(unsigned long long) const [8]
                0.24    0.00 400011413/400031413     std::_Base_bitset<6250ull>::_S_whichword(unsigned long long) [9]
-----------------------------------------------
                0.00    0.00   20000/400031413     std::_Base_bitset<6250ull>::_M_getword(unsigned long long) [44]
                0.24    0.00 400011413/400031413     std::_Base_bitset<6250ull>::_M_getword(unsigned long long) const [8]
[9]      1.5    0.24    0.00 400031413         std::_Base_bitset<6250ull>::_S_whichword(unsigned long long) [9]
-----------------------------------------------
                0.18    0.00 400031413/400031413     std::_Base_bitset<6250ull>::_S_maskbit(unsigned long long) [7]
[10]     1.1    0.18    0.00 400031413         std::_Base_bitset<6250ull>::_S_whichbit(unsigned long long) [10]
-----------------------------------------------
                0.00    0.00   20000/400031413     std::bitset<200000ull>::set(unsigned long long, bool) [42]
                0.17    0.00 400011413/400031413     std::bitset<200000ull>::test(unsigned long long) const [5]
[11]     1.0    0.17    0.00 400031413         std::bitset<200000ull>::_M_check(unsigned long long, char const*) const [11]
-----------------------------------------------
                0.00    0.00   20000/400102826     main [2]
                0.14    0.00 400082826/400102826     winning_instances(std::vector<int, std::allocator<int> > const&, int) [3]
[12]     0.9    0.14    0.00 400102826         std::vector<int, std::allocator<int> >::operator[](unsigned long long) [12]
-----------------------------------------------
                0.00    0.00    6950/81637       std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_find_before_node(unsigned long long, int const&, unsigned long long) const [39]
                0.00    0.00    8845/81637       std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert_bucket_begin(unsigned long long, std::__detail::_Hash_node<int, false>*) [37]
                0.00    0.00   10993/81637       std::__detail::_Hash_node_base* std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_find_before_node_tr<int>(unsigned long long, int const&, unsigned long long) const [36]
                0.00    0.00   14997/81637       std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<int, false> > >::_M_deallocate_nodes(std::__detail::_Hash_node<int, false>*) [34]
                0.00    0.00   19852/81637       std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_rehash_aux(unsigned long long, std::integral_constant<bool, true>) [29]
                0.00    0.00   20000/81637       std::__detail::_Node_iterator_base<int, false>::_M_incr() [28]
[13]     0.1    0.01    0.00   81637         std::__detail::_Hash_node<int, false>::_M_next() const [13]
-----------------------------------------------
                0.00    0.01   20000/20000       std::insert_iterator<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > > std::__copy_move<false, false, std::random_access_iterator_tag>::__copy_m<int const*, std::insert_iterator<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > > >(int const*, int const*, std::insert_iterator<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > >) [15]
[14]     0.0    0.00    0.01   20000         std::insert_iterator<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > >::operator=(int const&) [14]
                0.00    0.00   20000/20000       std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> >::insert(std::__detail::_Node_const_iterator<int, true, false>, int const&) [24]
                0.00    0.00   20000/20000       std::__detail::_Node_iterator<int, true, false>::operator++() [27]
                0.00    0.00   20000/20000       std::__detail::_Node_const_iterator<int, true, false>::_Node_const_iterator(std::__detail::_Node_iterator<int, true, false> const&) [175]
-----------------------------------------------
                0.00    0.01       1/1           std::insert_iterator<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > > std::__copy_move_a2<false, int const*, std::insert_iterator<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > > >(int const*, int const*, std::insert_iterator<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > >) [18]
[15]     0.0    0.00    0.01       1         std::insert_iterator<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > > std::__copy_move<false, false, std::random_access_iterator_tag>::__copy_m<int const*, std::insert_iterator<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > > >(int const*, int const*, std::insert_iterator<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > >) [15]
                0.00    0.01   20000/20000       std::insert_iterator<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > >::operator=(int const&) [14]
                0.00    0.00   20000/20000       std::insert_iterator<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > >::operator*() [167]
                0.00    0.00   20000/20000       std::insert_iterator<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > >::operator++() [168]
-----------------------------------------------
                0.00    0.01       1/1           std::insert_iterator<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > > std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, std::insert_iterator<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, std::insert_iterator<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > >) [19]
[16]     0.0    0.00    0.01       1         std::insert_iterator<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > > std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, std::insert_iterator<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, std::insert_iterator<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > >) [16]
                0.00    0.01       1/1           std::insert_iterator<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > > std::__copy_move_a1<false, int const*, std::insert_iterator<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > > >(int const*, int const*, std::insert_iterator<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > >) [17]
                0.00    0.00       2/2           int const* std::__niter_base<int const*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >) [249]
                0.00    0.00       1/1           std::insert_iterator<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > > std::__niter_base<std::insert_iterator<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > > >(std::insert_iterator<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > >) [270]
                0.00    0.00       1/1           std::insert_iterator<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > > std::__niter_wrap<std::insert_iterator<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > > >(std::insert_iterator<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > > const&, std::insert_iterator<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > >) [271]
-----------------------------------------------
                0.00    0.01       1/1           std::insert_iterator<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > > std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, std::insert_iterator<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, std::insert_iterator<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > >) [16]
[17]     0.0    0.00    0.01       1         std::insert_iterator<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > > std::__copy_move_a1<false, int const*, std::insert_iterator<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > > >(int const*, int const*, std::insert_iterator<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > >) [17]
                0.00    0.01       1/1           std::insert_iterator<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > > std::__copy_move_a2<false, int const*, std::insert_iterator<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > > >(int const*, int const*, std::insert_iterator<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > >) [18]
-----------------------------------------------
                0.00    0.01       1/1           std::insert_iterator<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > > std::__copy_move_a1<false, int const*, std::insert_iterator<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > > >(int const*, int const*, std::insert_iterator<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > >) [17]
[18]     0.0    0.00    0.01       1         std::insert_iterator<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > > std::__copy_move_a2<false, int const*, std::insert_iterator<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > > >(int const*, int const*, std::insert_iterator<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > >) [18]
                0.00    0.01       1/1           std::insert_iterator<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > > std::__copy_move<false, false, std::random_access_iterator_tag>::__copy_m<int const*, std::insert_iterator<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > > >(int const*, int const*, std::insert_iterator<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > >) [15]
-----------------------------------------------
                0.00    0.01       1/1           winning_instances(std::vector<int, std::allocator<int> > const&, int) [3]
[19]     0.0    0.00    0.01       1         std::insert_iterator<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > > std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, std::insert_iterator<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, std::insert_iterator<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > >) [19]
                0.00    0.01       1/1           std::insert_iterator<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > > std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, std::insert_iterator<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, std::insert_iterator<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > >) [16]
                0.00    0.00       2/2           __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >) [248]
-----------------------------------------------
                0.00    0.00   20000/20000       std::pair<std::__detail::_Node_iterator<int, true, false>, bool> std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert_unique_aux<int const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<int, false> > > >(int const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<int, false> > > const&) [21]
[20]     0.0    0.00    0.00   20000         std::pair<std::__detail::_Node_iterator<int, true, false>, bool> std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert_unique<int const&, int const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<int, false> > > >(int const&, int const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<int, false> > > const&) [20]
                0.00    0.00   14997/14997       std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert_unique_node(unsigned long long, unsigned long long, std::__detail::_Hash_node<int, false>*, unsigned long long) [26]
                0.00    0.00   19999/19999       std::__detail::_Hash_node<int, false>* std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_find_node_tr<int>(unsigned long long, int const&, unsigned long long) const [35]
                0.00    0.00   40000/60000       std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::size() const [133]
                0.00    0.00   40000/60000       std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::__small_size_threshold() [134]
                0.00    0.00   29994/302778      int const& std::forward<int const&>(std::remove_reference<int const&>::type&) [118]
                0.00    0.00   20000/20000       unsigned long long std::__detail::_Hash_code_base<int, int, std::__detail::_Identity, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_hash_code_tr<int>(int const&) const [161]
                0.00    0.00   20000/40011       std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_bucket_index(unsigned long long) const [137]
                0.00    0.00   14997/14997       std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<int, false> > >::__node_type* std::__detail::_NodeBuilder<std::__detail::_Identity>::_S_build<int const&, int const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<int, false> > > >(int const&, int const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<int, false> > > const&) [187]
                0.00    0.00   14997/14997       std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_Scoped_node::_Scoped_node(std::__detail::_Hash_node<int, false>*, std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<int, false> > >*) [180]
                0.00    0.00   14997/14997       std::pair<std::__detail::_Node_iterator<int, true, false>, bool>::pair<std::__detail::_Node_iterator<int, true, false>&, bool, true>(std::__detail::_Node_iterator<int, true, false>&, bool&&) [185]
                0.00    0.00   14997/14997       std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_Scoped_node::~_Scoped_node() [181]
                0.00    0.00    5003/60003       std::__detail::_Node_iterator<int, true, false>::_Node_iterator(std::__detail::_Hash_node<int, false>*) [132]
                0.00    0.00    5003/5003        std::pair<std::__detail::_Node_iterator<int, true, false>, bool>::pair<std::__detail::_Node_iterator<int, true, false>, bool, true>(std::__detail::_Node_iterator<int, true, false>&&, bool&&) [198]
                0.00    0.00       1/1           std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::begin() [252]
                0.00    0.00       1/20002       std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::end() [155]
                0.00    0.00       1/20001       std::__detail::operator!=(std::__detail::_Node_iterator_base<int, false> const&, std::__detail::_Node_iterator_base<int, false> const&) [157]
-----------------------------------------------
                0.00    0.00   20000/20000       std::pair<std::__detail::_Node_iterator<int, true, false>, bool> std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert<int const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<int, false> > > >(int const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<int, false> > > const&, std::integral_constant<bool, true>) [23]
[21]     0.0    0.00    0.00   20000         std::pair<std::__detail::_Node_iterator<int, true, false>, bool> std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert_unique_aux<int const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<int, false> > > >(int const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<int, false> > > const&) [21]
                0.00    0.00   20000/20000       std::pair<std::__detail::_Node_iterator<int, true, false>, bool> std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert_unique<int const&, int const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<int, false> > > >(int const&, int const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<int, false> > > const&) [20]
                0.00    0.00   40000/302778      int const& std::forward<int const&>(std::remove_reference<int const&>::type&) [118]
                0.00    0.00   20000/97799       int const& std::__detail::_Identity::operator()<int const&>(int const&) const [119]
                0.00    0.00   20000/20000       std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_S_forward_key(int const&) [163]
-----------------------------------------------
                0.00    0.00   20000/20000       std::__detail::_Insert_base<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::insert(std::__detail::_Node_const_iterator<int, true, false>, int const&) [25]
[22]     0.0    0.00    0.00   20000         std::__detail::_Node_iterator<int, true, false> std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert<int const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<int, false> > > >(std::__detail::_Node_const_iterator<int, true, false>, int const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<int, false> > > const&, std::integral_constant<bool, true>) [22]
                0.00    0.00   20000/20000       std::pair<std::__detail::_Node_iterator<int, true, false>, bool> std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert<int const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<int, false> > > >(int const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<int, false> > > const&, std::integral_constant<bool, true>) [23]
                0.00    0.00   20000/302778      int const& std::forward<int const&>(std::remove_reference<int const&>::type&) [118]
-----------------------------------------------
                0.00    0.00   20000/20000       std::__detail::_Node_iterator<int, true, false> std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert<int const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<int, false> > > >(std::__detail::_Node_const_iterator<int, true, false>, int const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<int, false> > > const&, std::integral_constant<bool, true>) [22]
[23]     0.0    0.00    0.00   20000         std::pair<std::__detail::_Node_iterator<int, true, false>, bool> std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert<int const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<int, false> > > >(int const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<int, false> > > const&, std::integral_constant<bool, true>) [23]
                0.00    0.00   20000/20000       std::pair<std::__detail::_Node_iterator<int, true, false>, bool> std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert_unique_aux<int const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<int, false> > > >(int const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<int, false> > > const&) [21]
                0.00    0.00   20000/302778      int const& std::forward<int const&>(std::remove_reference<int const&>::type&) [118]
                0.00    0.00   20000/20000       int const& std::__detail::_ConvertToValueType<std::__detail::_Identity, int>::operator()<int const&>(int const&) const [162]
-----------------------------------------------
                0.00    0.00   20000/20000       std::insert_iterator<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > >::operator=(int const&) [14]
[24]     0.0    0.00    0.00   20000         std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> >::insert(std::__detail::_Node_const_iterator<int, true, false>, int const&) [24]
                0.00    0.00   20000/20000       std::__detail::_Insert_base<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::insert(std::__detail::_Node_const_iterator<int, true, false>, int const&) [25]
-----------------------------------------------
                0.00    0.00   20000/20000       std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> >::insert(std::__detail::_Node_const_iterator<int, true, false>, int const&) [24]
[25]     0.0    0.00    0.00   20000         std::__detail::_Insert_base<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::insert(std::__detail::_Node_const_iterator<int, true, false>, int const&) [25]
                0.00    0.00   20000/20000       std::__detail::_Node_iterator<int, true, false> std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert<int const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<int, false> > > >(std::__detail::_Node_const_iterator<int, true, false>, int const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<int, false> > > const&, std::integral_constant<bool, true>) [22]
                0.00    0.00   20000/20000       std::__detail::_Insert_base<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_conjure_hashtable() [174]
                0.00    0.00   20000/20000       std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<int, false> > >::_AllocNode(std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<int, false> > >&) [173]
-----------------------------------------------
                0.00    0.00   14997/14997       std::pair<std::__detail::_Node_iterator<int, true, false>, bool> std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert_unique<int const&, int const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<int, false> > > >(int const&, int const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<int, false> > > const&) [20]
[26]     0.0    0.00    0.00   14997         std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert_unique_node(unsigned long long, unsigned long long, std::__detail::_Hash_node<int, false>*, unsigned long long) [26]
                0.00    0.00      11/11          std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_rehash(unsigned long long, unsigned long long const&) [30]
                0.00    0.00   14997/14997       std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert_bucket_begin(unsigned long long, std::__detail::_Hash_node<int, false>*) [37]
                0.00    0.00   14997/14997       std::__detail::_Prime_rehash_policy::_M_state() const [179]
                0.00    0.00   14997/14997       std::__detail::_Hash_code_base<int, int, std::__detail::_Identity, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_store_code(std::__detail::_Hash_node_code_cache<false>&, unsigned long long) const [178]
                0.00    0.00   14997/60003       std::__detail::_Node_iterator<int, true, false>::_Node_iterator(std::__detail::_Hash_node<int, false>*) [132]
                0.00    0.00      11/40011       std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_bucket_index(unsigned long long) const [137]
-----------------------------------------------
                0.00    0.00   20000/20000       std::insert_iterator<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > >::operator=(int const&) [14]
[27]     0.0    0.00    0.00   20000         std::__detail::_Node_iterator<int, true, false>::operator++() [27]
                0.00    0.00   20000/20000       std::__detail::_Node_iterator_base<int, false>::_M_incr() [28]
-----------------------------------------------
                0.00    0.00   20000/20000       std::__detail::_Node_iterator<int, true, false>::operator++() [27]
[28]     0.0    0.00    0.00   20000         std::__detail::_Node_iterator_base<int, false>::_M_incr() [28]
                0.00    0.00   20000/81637       std::__detail::_Hash_node<int, false>::_M_next() const [13]
-----------------------------------------------
                0.00    0.00      11/11          std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_rehash(unsigned long long, unsigned long long const&) [30]
[29]     0.0    0.00    0.00      11         std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_rehash_aux(unsigned long long, std::integral_constant<bool, true>) [29]
                0.00    0.00   19852/81637       std::__detail::_Hash_node<int, false>::_M_next() const [13]
                0.00    0.00   19852/40745       std::__detail::_Hash_code_base<int, int, std::__detail::_Identity, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(std::__detail::_Hash_node_value<int, false> const&, unsigned long long) const [136]
                0.00    0.00      11/11          std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_allocate_buckets(unsigned long long) [205]
                0.00    0.00      11/13          std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_begin() const [201]
                0.00    0.00      11/12          std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_deallocate_buckets() [204]
-----------------------------------------------
                0.00    0.00      11/11          std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert_unique_node(unsigned long long, unsigned long long, std::__detail::_Hash_node<int, false>*, unsigned long long) [26]
[30]     0.0    0.00    0.00      11         std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_rehash(unsigned long long, unsigned long long const&) [30]
                0.00    0.00      11/11          std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_rehash_aux(unsigned long long, std::integral_constant<bool, true>) [29]
-----------------------------------------------
                0.00    0.00       1/1           std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::~_Hashtable() [32]
[31]     0.0    0.00    0.00       1         std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::clear() [31]
                0.00    0.00       1/1           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<int, false> > >::_M_deallocate_nodes(std::__detail::_Hash_node<int, false>*) [34]
                0.00    0.00       1/13          std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_begin() const [201]
-----------------------------------------------
                0.00    0.00       1/1           std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> >::~unordered_set() [33]
[32]     0.0    0.00    0.00       1         std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::~_Hashtable() [32]
                0.00    0.00       1/1           std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::clear() [31]
                0.00    0.00       1/12          std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_deallocate_buckets() [204]
                0.00    0.00       1/1           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<int, false> > >::~_Hashtable_alloc() [263]
-----------------------------------------------
                0.00    0.00       1/1           winning_instances(std::vector<int, std::allocator<int> > const&, int) [3]
[33]     0.0    0.00    0.00       1         std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> >::~unordered_set() [33]
                0.00    0.00       1/1           std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::~_Hashtable() [32]
-----------------------------------------------
                0.00    0.00       1/1           std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::clear() [31]
[34]     0.0    0.00    0.00       1         std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<int, false> > >::_M_deallocate_nodes(std::__detail::_Hash_node<int, false>*) [34]
                0.00    0.00   14997/81637       std::__detail::_Hash_node<int, false>::_M_next() const [13]
                0.00    0.00   14997/14997       std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<int, false> > >::_M_deallocate_node(std::__detail::_Hash_node<int, false>*) [190]
-----------------------------------------------
                0.00    0.00   19999/19999       std::pair<std::__detail::_Node_iterator<int, true, false>, bool> std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert_unique<int const&, int const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<int, false> > > >(int const&, int const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<int, false> > > const&) [20]
[35]     0.0    0.00    0.00   19999         std::__detail::_Hash_node<int, false>* std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_find_node_tr<int>(unsigned long long, int const&, unsigned long long) const [35]
                0.00    0.00   19999/19999       std::__detail::_Hash_node_base* std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_find_before_node_tr<int>(unsigned long long, int const&, unsigned long long) const [36]
-----------------------------------------------
                0.00    0.00   19999/19999       std::__detail::_Hash_node<int, false>* std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_find_node_tr<int>(unsigned long long, int const&, unsigned long long) const [35]
[36]     0.0    0.00    0.00   19999         std::__detail::_Hash_node_base* std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_find_before_node_tr<int>(unsigned long long, int const&, unsigned long long) const [36]
                0.00    0.00   10993/81637       std::__detail::_Hash_node<int, false>::_M_next() const [13]
                0.00    0.00   13579/13579       bool std::__detail::_Hashtable_base<int, int, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, true, true> >::_M_equals_tr<int>(int const&, unsigned long long, std::__detail::_Hash_node_value<int, false> const&) const [196]
                0.00    0.00    8573/20893       std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_bucket_index(std::__detail::_Hash_node_value<int, false> const&) const [154]
-----------------------------------------------
                0.00    0.00   14997/14997       std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert_unique_node(unsigned long long, unsigned long long, std::__detail::_Hash_node<int, false>*, unsigned long long) [26]
[37]     0.0    0.00    0.00   14997         std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert_bucket_begin(unsigned long long, std::__detail::_Hash_node<int, false>*) [37]
                0.00    0.00    8845/81637       std::__detail::_Hash_node<int, false>::_M_next() const [13]
                0.00    0.00    8845/20893       std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_bucket_index(std::__detail::_Hash_node_value<int, false> const&) const [154]
-----------------------------------------------
                0.00    0.00   20000/20000       std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::find(int const&) [40]
[38]     0.0    0.00    0.00   20000         std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_find_node(unsigned long long, int const&, unsigned long long) const [38]
                0.00    0.00   20000/20000       std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_find_before_node(unsigned long long, int const&, unsigned long long) const [39]
-----------------------------------------------
                0.00    0.00   20000/20000       std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_find_node(unsigned long long, int const&, unsigned long long) const [38]
[39]     0.0    0.00    0.00   20000         std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_find_before_node(unsigned long long, int const&, unsigned long long) const [39]
                0.00    0.00    6950/81637       std::__detail::_Hash_node<int, false>::_M_next() const [13]
                0.00    0.00   23475/23475       std::__detail::_Hashtable_base<int, int, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, true, true> >::_M_equals(int const&, unsigned long long, std::__detail::_Hash_node_value<int, false> const&) const [153]
                0.00    0.00    3475/20893       std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_bucket_index(std::__detail::_Hash_node_value<int, false> const&) const [154]
-----------------------------------------------
                0.00    0.00   20000/20000       std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> >::find(int const&) [41]
[40]     0.0    0.00    0.00   20000         std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::find(int const&) [40]
                0.00    0.00   20000/20000       std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_find_node(unsigned long long, int const&, unsigned long long) const [38]
                0.00    0.00   20000/60000       std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::size() const [133]
                0.00    0.00   20000/60000       std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::__small_size_threshold() [134]
                0.00    0.00   20000/60745       std::__detail::_Hash_code_base<int, int, std::__detail::_Identity, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_hash_code(int const&) const [129]
                0.00    0.00   20000/40011       std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_bucket_index(unsigned long long) const [137]
                0.00    0.00   20000/60003       std::__detail::_Node_iterator<int, true, false>::_Node_iterator(std::__detail::_Hash_node<int, false>*) [132]
-----------------------------------------------
                0.00    0.00   20000/20000       winning_instances(std::vector<int, std::allocator<int> > const&, int) [3]
[41]     0.0    0.00    0.00   20000         std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> >::find(int const&) [41]
                0.00    0.00   20000/20000       std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::find(int const&) [40]
-----------------------------------------------
                0.00    0.00   20000/20000       winning_instances(std::vector<int, std::allocator<int> > const&, int) [3]
[42]     0.0    0.00    0.00   20000         std::bitset<200000ull>::set(unsigned long long, bool) [42]
                0.00    0.00   20000/20000       std::bitset<200000ull>::_Unchecked_set(unsigned long long, int) [43]
                0.00    0.00   20000/400031413     std::bitset<200000ull>::_M_check(unsigned long long, char const*) const [11]
-----------------------------------------------
                0.00    0.00   20000/20000       std::bitset<200000ull>::set(unsigned long long, bool) [42]
[43]     0.0    0.00    0.00   20000         std::bitset<200000ull>::_Unchecked_set(unsigned long long, int) [43]
                0.00    0.00   20000/400031413     std::_Base_bitset<6250ull>::_S_maskbit(unsigned long long) [7]
                0.00    0.00   20000/20000       std::_Base_bitset<6250ull>::_M_getword(unsigned long long) [44]
-----------------------------------------------
                0.00    0.00   20000/20000       std::bitset<200000ull>::_Unchecked_set(unsigned long long, int) [43]
[44]     0.0    0.00    0.00   20000         std::_Base_bitset<6250ull>::_M_getword(unsigned long long) [44]
                0.00    0.00   20000/400031413     std::_Base_bitset<6250ull>::_S_whichword(unsigned long long) [9]
-----------------------------------------------
                0.00    0.00   14997/302778      std::__detail::_Hash_node<int, false>* std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<int, false> > >::operator()<int const&>(int const&) const [177]
                0.00    0.00   14997/302778      std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<int, false> > >::__node_type* std::__detail::_NodeBuilder<std::__detail::_Identity>::_S_build<int const&, int const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<int, false> > > >(int const&, int const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<int, false> > > const&) [187]
                0.00    0.00   20000/302778      int const& std::__detail::_ConvertToValueType<std::__detail::_Identity, int>::operator()<int const&>(int const&) const [162]
                0.00    0.00   20000/302778      std::__detail::_Node_iterator<int, true, false> std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert<int const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<int, false> > > >(std::__detail::_Node_const_iterator<int, true, false>, int const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<int, false> > > const&, std::integral_constant<bool, true>) [22]
                0.00    0.00   20000/302778      std::pair<std::__detail::_Node_iterator<int, true, false>, bool> std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert<int const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<int, false> > > >(int const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<int, false> > > const&, std::integral_constant<bool, true>) [23]
                0.00    0.00   29994/302778      std::pair<std::__detail::_Node_iterator<int, true, false>, bool> std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert_unique<int const&, int const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<int, false> > > >(int const&, int const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<int, false> > > const&) [20]
                0.00    0.00   40000/302778      std::pair<std::__detail::_Node_iterator<int, true, false>, bool> std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert_unique_aux<int const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<int, false> > > >(int const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<int, false> > > const&) [21]
                0.00    0.00   44991/302778      std::__detail::_Hash_node<int, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<int, false> > >::_M_allocate_node<int const&>(int const&) [189]
                0.00    0.00   97799/302778      int const& std::__detail::_Identity::operator()<int const&>(int const&) const [119]
[118]    0.0    0.00    0.00  302778         int const& std::forward<int const&>(std::remove_reference<int const&>::type&) [118]
-----------------------------------------------
                0.00    0.00   13579/97799       bool std::__detail::_Hashtable_base<int, int, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, true, true> >::_M_key_equals_tr<int>(int const&, std::__detail::_Hash_node_value<int, false> const&) const [197]
                0.00    0.00   20000/97799       std::pair<std::__detail::_Node_iterator<int, true, false>, bool> std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert_unique_aux<int const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<int, false> > > >(int const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<int, false> > > const&) [21]
                0.00    0.00   23475/97799       std::__detail::_Hashtable_base<int, int, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, true, true> >::_M_key_equals(int const&, std::__detail::_Hash_node_value<int, false> const&) const [152]
                0.00    0.00   40745/97799       std::__detail::_Hash_code_base<int, int, std::__detail::_Identity, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(std::__detail::_Hash_node_value<int, false> const&, unsigned long long) const [136]
[119]    0.0    0.00    0.00   97799         int const& std::__detail::_Identity::operator()<int const&>(int const&) const [119]
                0.00    0.00   97799/302778      int const& std::forward<int const&>(std::remove_reference<int const&>::type&) [118]
-----------------------------------------------
                0.00    0.00   40011/80756       std::__detail::_Hash_code_base<int, int, std::__detail::_Identity, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(unsigned long long, unsigned long long) const [138]
                0.00    0.00   40745/80756       std::__detail::_Hash_code_base<int, int, std::__detail::_Identity, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(std::__detail::_Hash_node_value<int, false> const&, unsigned long long) const [136]
[120]    0.0    0.00    0.00   80756         std::__detail::_Mod_range_hashing::operator()(unsigned long long, unsigned long long) const [120]
-----------------------------------------------
                0.00    0.00   20000/80745       unsigned long long std::__detail::_Hash_code_base<int, int, std::__detail::_Identity, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_hash_code_tr<int>(int const&) const [161]
                0.00    0.00   60745/80745       std::__detail::_Hash_code_base<int, int, std::__detail::_Identity, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_hash_code(int const&) const [129]
[121]    0.0    0.00    0.00   80745         std::hash<int>::operator()(int) const [121]
-----------------------------------------------
                0.00    0.00   20000/80745       unsigned long long std::__detail::_Hash_code_base<int, int, std::__detail::_Identity, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_hash_code_tr<int>(int const&) const [161]
                0.00    0.00   60745/80745       std::__detail::_Hash_code_base<int, int, std::__detail::_Identity, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_hash_code(int const&) const [129]
[122]    0.0    0.00    0.00   80745         std::__detail::_Hash_code_base<int, int, std::__detail::_Identity, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_hash() const [122]
                0.00    0.00   80745/80745       std::__detail::_Hashtable_ebo_helper<1, std::hash<int>, true>::_M_cget() const [123]
-----------------------------------------------
                0.00    0.00   80745/80745       std::__detail::_Hash_code_base<int, int, std::__detail::_Identity, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_hash() const [122]
[123]    0.0    0.00    0.00   80745         std::__detail::_Hashtable_ebo_helper<1, std::hash<int>, true>::_M_cget() const [123]
-----------------------------------------------
                0.00    0.00   20000/80003       std::__detail::_Node_const_iterator<int, true, false>::_Node_const_iterator(std::__detail::_Node_iterator<int, true, false> const&) [175]
                0.00    0.00   60003/80003       std::__detail::_Node_iterator<int, true, false>::_Node_iterator(std::__detail::_Hash_node<int, false>*) [132]
[124]    0.0    0.00    0.00   80003         std::__detail::_Node_iterator_base<int, false>::_Node_iterator_base(std::__detail::_Hash_node<int, false>*) [124]
-----------------------------------------------
                0.00    0.00   77799/77799       std::__detail::_Hash_node_value_base<int>::_M_valptr() const [128]
[125]    0.0    0.00    0.00   77799         __gnu_cxx::__aligned_buffer<int>::_M_ptr() const [125]
                0.00    0.00   77799/77799       __gnu_cxx::__aligned_buffer<int>::_M_addr() const [126]
-----------------------------------------------
                0.00    0.00   77799/77799       __gnu_cxx::__aligned_buffer<int>::_M_ptr() const [125]
[126]    0.0    0.00    0.00   77799         __gnu_cxx::__aligned_buffer<int>::_M_addr() const [126]
-----------------------------------------------
                0.00    0.00   13579/77799       bool std::__detail::_Hashtable_base<int, int, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, true, true> >::_M_key_equals_tr<int>(int const&, std::__detail::_Hash_node_value<int, false> const&) const [197]
                0.00    0.00   23475/77799       std::__detail::_Hashtable_base<int, int, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, true, true> >::_M_key_equals(int const&, std::__detail::_Hash_node_value<int, false> const&) const [152]
                0.00    0.00   40745/77799       std::__detail::_Hash_code_base<int, int, std::__detail::_Identity, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(std::__detail::_Hash_node_value<int, false> const&, unsigned long long) const [136]
[127]    0.0    0.00    0.00   77799         std::__detail::_Hash_node_value_base<int>::_M_v() const [127]
                0.00    0.00   77799/77799       std::__detail::_Hash_node_value_base<int>::_M_valptr() const [128]
-----------------------------------------------
                0.00    0.00   77799/77799       std::__detail::_Hash_node_value_base<int>::_M_v() const [127]
[128]    0.0    0.00    0.00   77799         std::__detail::_Hash_node_value_base<int>::_M_valptr() const [128]
                0.00    0.00   77799/77799       __gnu_cxx::__aligned_buffer<int>::_M_ptr() const [125]
-----------------------------------------------
                0.00    0.00   20000/60745       std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::find(int const&) [40]
                0.00    0.00   40745/60745       std::__detail::_Hash_code_base<int, int, std::__detail::_Identity, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(std::__detail::_Hash_node_value<int, false> const&, unsigned long long) const [136]
[129]    0.0    0.00    0.00   60745         std::__detail::_Hash_code_base<int, int, std::__detail::_Identity, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_hash_code(int const&) const [129]
                0.00    0.00   60745/80745       std::__detail::_Hash_code_base<int, int, std::__detail::_Identity, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_hash() const [122]
                0.00    0.00   60745/80745       std::hash<int>::operator()(int) const [121]
-----------------------------------------------
                0.00    0.00      11/60010       std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<int, false> > >::_M_allocate_buckets(unsigned long long) [209]
                0.00    0.00      11/60010       std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<int, false> > >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned long long) [210]
                0.00    0.00   14997/60010       std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<int, false> > >::_M_deallocate_node(std::__detail::_Hash_node<int, false>*) [190]
                0.00    0.00   14997/60010       std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<int, false> > >::_M_deallocate_node_ptr(std::__detail::_Hash_node<int, false>*) [191]
                0.00    0.00   29994/60010       std::__detail::_Hash_node<int, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<int, false> > >::_M_allocate_node<int const&>(int const&) [189]
[130]    0.0    0.00    0.00   60010         std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<int, false> > >::_M_node_allocator() [130]
                0.00    0.00   60010/60010       std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<int, false> >, true>::_M_get() [131]
-----------------------------------------------
                0.00    0.00   60010/60010       std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<int, false> > >::_M_node_allocator() [130]
[131]    0.0    0.00    0.00   60010         std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<int, false> >, true>::_M_get() [131]
-----------------------------------------------
                0.00    0.00       1/60003       std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::begin() [252]
                0.00    0.00    5003/60003       std::pair<std::__detail::_Node_iterator<int, true, false>, bool> std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert_unique<int const&, int const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<int, false> > > >(int const&, int const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<int, false> > > const&) [20]
                0.00    0.00   14997/60003       std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert_unique_node(unsigned long long, unsigned long long, std::__detail::_Hash_node<int, false>*, unsigned long long) [26]
                0.00    0.00   20000/60003       std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::find(int const&) [40]
                0.00    0.00   20002/60003       std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::end() [155]
[132]    0.0    0.00    0.00   60003         std::__detail::_Node_iterator<int, true, false>::_Node_iterator(std::__detail::_Hash_node<int, false>*) [132]
                0.00    0.00   60003/80003       std::__detail::_Node_iterator_base<int, false>::_Node_iterator_base(std::__detail::_Hash_node<int, false>*) [124]
-----------------------------------------------
                0.00    0.00   20000/60000       std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::find(int const&) [40]
                0.00    0.00   40000/60000       std::pair<std::__detail::_Node_iterator<int, true, false>, bool> std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert_unique<int const&, int const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<int, false> > > >(int const&, int const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<int, false> > > const&) [20]
[133]    0.0    0.00    0.00   60000         std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::size() const [133]
-----------------------------------------------
                0.00    0.00   20000/60000       std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::find(int const&) [40]
                0.00    0.00   40000/60000       std::pair<std::__detail::_Node_iterator<int, true, false>, bool> std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert_unique<int const&, int const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<int, false> > > >(int const&, int const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<int, false> > > const&) [20]
[134]    0.0    0.00    0.00   60000         std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::__small_size_threshold() [134]
                0.00    0.00   60000/60000       std::__detail::_Hashtable_hash_traits<std::hash<int> >::__small_size_threshold() [135]
-----------------------------------------------
                0.00    0.00   60000/60000       std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::__small_size_threshold() [134]
[135]    0.0    0.00    0.00   60000         std::__detail::_Hashtable_hash_traits<std::hash<int> >::__small_size_threshold() [135]
-----------------------------------------------
                0.00    0.00   19852/40745       std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_rehash_aux(unsigned long long, std::integral_constant<bool, true>) [29]
                0.00    0.00   20893/40745       std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_bucket_index(std::__detail::_Hash_node_value<int, false> const&) const [154]
[136]    0.0    0.00    0.00   40745         std::__detail::_Hash_code_base<int, int, std::__detail::_Identity, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(std::__detail::_Hash_node_value<int, false> const&, unsigned long long) const [136]
                0.00    0.00   40745/77799       std::__detail::_Hash_node_value_base<int>::_M_v() const [127]
                0.00    0.00   40745/97799       int const& std::__detail::_Identity::operator()<int const&>(int const&) const [119]
                0.00    0.00   40745/60745       std::__detail::_Hash_code_base<int, int, std::__detail::_Identity, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_hash_code(int const&) const [129]
                0.00    0.00   40745/80756       std::__detail::_Mod_range_hashing::operator()(unsigned long long, unsigned long long) const [120]
-----------------------------------------------
                0.00    0.00      11/40011       std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert_unique_node(unsigned long long, unsigned long long, std::__detail::_Hash_node<int, false>*, unsigned long long) [26]
                0.00    0.00   20000/40011       std::pair<std::__detail::_Node_iterator<int, true, false>, bool> std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert_unique<int const&, int const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<int, false> > > >(int const&, int const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<int, false> > > const&) [20]
                0.00    0.00   20000/40011       std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::find(int const&) [40]
[137]    0.0    0.00    0.00   40011         std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_bucket_index(unsigned long long) const [137]
                0.00    0.00   40011/40011       std::__detail::_Hash_code_base<int, int, std::__detail::_Identity, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(unsigned long long, unsigned long long) const [138]
-----------------------------------------------
                0.00    0.00   40011/40011       std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_bucket_index(unsigned long long) const [137]
[138]    0.0    0.00    0.00   40011         std::__detail::_Hash_code_base<int, int, std::__detail::_Identity, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(unsigned long long, unsigned long long) const [138]
                0.00    0.00   40011/80756       std::__detail::_Mod_range_hashing::operator()(unsigned long long, unsigned long long) const [120]
-----------------------------------------------
                0.00    0.00   20000/40000       std::bitset<400000ull>::test(unsigned long long) const [160]
                0.00    0.00   20000/40000       std::bitset<400000ull>::set(unsigned long long, bool) [171]
[139]    0.0    0.00    0.00   40000         std::bitset<400000ull>::_M_check(unsigned long long, char const*) const [139]
-----------------------------------------------
                0.00    0.00   40000/40000       winning_instances(std::vector<int, std::allocator<int> > const&, int) [3]
[140]    0.0    0.00    0.00   40000         std::vector<int, std::allocator<int> >::operator[](unsigned long long) const [140]
-----------------------------------------------
                0.00    0.00   20000/40000       std::bitset<400000ull>::_Unchecked_test(unsigned long long) const [159]
                0.00    0.00   20000/40000       std::bitset<400000ull>::_Unchecked_set(unsigned long long, int) [170]
[141]    0.0    0.00    0.00   40000         std::_Base_bitset<12500ull>::_S_maskbit(unsigned long long) [141]
                0.00    0.00   40000/40000       std::_Base_bitset<12500ull>::_S_whichbit(unsigned long long) [142]
-----------------------------------------------
                0.00    0.00   40000/40000       std::_Base_bitset<12500ull>::_S_maskbit(unsigned long long) [141]
[142]    0.0    0.00    0.00   40000         std::_Base_bitset<12500ull>::_S_whichbit(unsigned long long) [142]
-----------------------------------------------
                0.00    0.00   20000/40000       std::_Base_bitset<12500ull>::_M_getword(unsigned long long) const [158]
                0.00    0.00   20000/40000       std::_Base_bitset<12500ull>::_M_getword(unsigned long long) [164]
[143]    0.0    0.00    0.00   40000         std::_Base_bitset<12500ull>::_S_whichword(unsigned long long) [143]
-----------------------------------------------
                0.00    0.00   13579/37054       bool std::__detail::_Hashtable_base<int, int, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, true, true> >::_M_key_equals_tr<int>(int const&, std::__detail::_Hash_node_value<int, false> const&) const [197]
                0.00    0.00   23475/37054       std::__detail::_Hashtable_base<int, int, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, true, true> >::_M_key_equals(int const&, std::__detail::_Hash_node_value<int, false> const&) const [152]
[144]    0.0    0.00    0.00   37054         std::__detail::_Hashtable_base<int, int, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, true, true> >::_M_eq() const [144]
                0.00    0.00   37054/37054       std::__detail::_Hashtable_ebo_helper<0, std::equal_to<int>, true>::_M_cget() const [145]
-----------------------------------------------
                0.00    0.00   37054/37054       std::__detail::_Hashtable_base<int, int, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, true, true> >::_M_eq() const [144]
[145]    0.0    0.00    0.00   37054         std::__detail::_Hashtable_ebo_helper<0, std::equal_to<int>, true>::_M_cget() const [145]
-----------------------------------------------
                0.00    0.00   13579/37054       bool std::__detail::_Hashtable_base<int, int, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, true, true> >::_M_key_equals_tr<int>(int const&, std::__detail::_Hash_node_value<int, false> const&) const [197]
                0.00    0.00   23475/37054       std::__detail::_Hashtable_base<int, int, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, true, true> >::_M_key_equals(int const&, std::__detail::_Hash_node_value<int, false> const&) const [152]
[146]    0.0    0.00    0.00   37054         std::equal_to<int>::operator()(int const&, int const&) const [146]
-----------------------------------------------
                0.00    0.00   13579/37054       bool std::__detail::_Hashtable_base<int, int, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, true, true> >::_M_equals_tr<int>(int const&, unsigned long long, std::__detail::_Hash_node_value<int, false> const&) const [196]
                0.00    0.00   23475/37054       std::__detail::_Hashtable_base<int, int, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, true, true> >::_M_equals(int const&, unsigned long long, std::__detail::_Hash_node_value<int, false> const&) const [153]
[147]    0.0    0.00    0.00   37054         std::__detail::_Hashtable_base<int, int, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, true, true> >::_S_equals(unsigned long long, std::__detail::_Hash_node_code_cache<false> const&) [147]
-----------------------------------------------
                0.00    0.00       3/29997       void std::_Construct<int>(int*) [234]
                0.00    0.00   29994/29997       std::__detail::_Hash_node<int, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<int, false> > >::_M_allocate_node<int const&>(int const&) [189]
[148]    0.0    0.00    0.00   29997         operator new(unsigned long long, void*) [148]
-----------------------------------------------
                0.00    0.00   29994/29994       std::__detail::_Hash_node_value_base<int>::_M_valptr() [151]
[149]    0.0    0.00    0.00   29994         __gnu_cxx::__aligned_buffer<int>::_M_ptr() [149]
                0.00    0.00   29994/29994       __gnu_cxx::__aligned_buffer<int>::_M_addr() [150]
-----------------------------------------------
                0.00    0.00   29994/29994       __gnu_cxx::__aligned_buffer<int>::_M_ptr() [149]
[150]    0.0    0.00    0.00   29994         __gnu_cxx::__aligned_buffer<int>::_M_addr() [150]
-----------------------------------------------
                0.00    0.00   14997/29994       std::__detail::_Hash_node<int, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<int, false> > >::_M_allocate_node<int const&>(int const&) [189]
                0.00    0.00   14997/29994       std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<int, false> > >::_M_deallocate_node(std::__detail::_Hash_node<int, false>*) [190]
[151]    0.0    0.00    0.00   29994         std::__detail::_Hash_node_value_base<int>::_M_valptr() [151]
                0.00    0.00   29994/29994       __gnu_cxx::__aligned_buffer<int>::_M_ptr() [149]
-----------------------------------------------
                0.00    0.00   23475/23475       std::__detail::_Hashtable_base<int, int, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, true, true> >::_M_equals(int const&, unsigned long long, std::__detail::_Hash_node_value<int, false> const&) const [153]
[152]    0.0    0.00    0.00   23475         std::__detail::_Hashtable_base<int, int, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, true, true> >::_M_key_equals(int const&, std::__detail::_Hash_node_value<int, false> const&) const [152]
                0.00    0.00   23475/37054       std::__detail::_Hashtable_base<int, int, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, true, true> >::_M_eq() const [144]
                0.00    0.00   23475/77799       std::__detail::_Hash_node_value_base<int>::_M_v() const [127]
                0.00    0.00   23475/97799       int const& std::__detail::_Identity::operator()<int const&>(int const&) const [119]
                0.00    0.00   23475/37054       std::equal_to<int>::operator()(int const&, int const&) const [146]
-----------------------------------------------
                0.00    0.00   23475/23475       std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_find_before_node(unsigned long long, int const&, unsigned long long) const [39]
[153]    0.0    0.00    0.00   23475         std::__detail::_Hashtable_base<int, int, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, true, true> >::_M_equals(int const&, unsigned long long, std::__detail::_Hash_node_value<int, false> const&) const [153]
                0.00    0.00   23475/37054       std::__detail::_Hashtable_base<int, int, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, true, true> >::_S_equals(unsigned long long, std::__detail::_Hash_node_code_cache<false> const&) [147]
                0.00    0.00   23475/23475       std::__detail::_Hashtable_base<int, int, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, true, true> >::_M_key_equals(int const&, std::__detail::_Hash_node_value<int, false> const&) const [152]
-----------------------------------------------
                0.00    0.00    3475/20893       std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_find_before_node(unsigned long long, int const&, unsigned long long) const [39]
                0.00    0.00    8573/20893       std::__detail::_Hash_node_base* std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_find_before_node_tr<int>(unsigned long long, int const&, unsigned long long) const [36]
                0.00    0.00    8845/20893       std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert_bucket_begin(unsigned long long, std::__detail::_Hash_node<int, false>*) [37]
[154]    0.0    0.00    0.00   20893         std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_bucket_index(std::__detail::_Hash_node_value<int, false> const&) const [154]
                0.00    0.00   20893/40745       std::__detail::_Hash_code_base<int, int, std::__detail::_Identity, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(std::__detail::_Hash_node_value<int, false> const&, unsigned long long) const [136]
-----------------------------------------------
                0.00    0.00       1/20002       std::pair<std::__detail::_Node_iterator<int, true, false>, bool> std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert_unique<int const&, int const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<int, false> > > >(int const&, int const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<int, false> > > const&) [20]
                0.00    0.00   20001/20002       std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> >::end() [156]
[155]    0.0    0.00    0.00   20002         std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::end() [155]
                0.00    0.00   20002/60003       std::__detail::_Node_iterator<int, true, false>::_Node_iterator(std::__detail::_Hash_node<int, false>*) [132]
-----------------------------------------------
                0.00    0.00   20001/20001       winning_instances(std::vector<int, std::allocator<int> > const&, int) [3]
[156]    0.0    0.00    0.00   20001         std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> >::end() [156]
                0.00    0.00   20001/20002       std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::end() [155]
-----------------------------------------------
                0.00    0.00       1/20001       std::pair<std::__detail::_Node_iterator<int, true, false>, bool> std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert_unique<int const&, int const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<int, false> > > >(int const&, int const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<int, false> > > const&) [20]
                0.00    0.00   20000/20001       winning_instances(std::vector<int, std::allocator<int> > const&, int) [3]
[157]    0.0    0.00    0.00   20001         std::__detail::operator!=(std::__detail::_Node_iterator_base<int, false> const&, std::__detail::_Node_iterator_base<int, false> const&) [157]
-----------------------------------------------
                0.00    0.00   20000/20000       std::bitset<400000ull>::_Unchecked_test(unsigned long long) const [159]
[158]    0.0    0.00    0.00   20000         std::_Base_bitset<12500ull>::_M_getword(unsigned long long) const [158]
                0.00    0.00   20000/40000       std::_Base_bitset<12500ull>::_S_whichword(unsigned long long) [143]
-----------------------------------------------
                0.00    0.00   20000/20000       std::bitset<400000ull>::test(unsigned long long) const [160]
[159]    0.0    0.00    0.00   20000         std::bitset<400000ull>::_Unchecked_test(unsigned long long) const [159]
                0.00    0.00   20000/20000       std::_Base_bitset<12500ull>::_M_getword(unsigned long long) const [158]
                0.00    0.00   20000/40000       std::_Base_bitset<12500ull>::_S_maskbit(unsigned long long) [141]
-----------------------------------------------
                0.00    0.00   20000/20000       winning_instances(std::vector<int, std::allocator<int> > const&, int) [3]
[160]    0.0    0.00    0.00   20000         std::bitset<400000ull>::test(unsigned long long) const [160]
                0.00    0.00   20000/40000       std::bitset<400000ull>::_M_check(unsigned long long, char const*) const [139]
                0.00    0.00   20000/20000       std::bitset<400000ull>::_Unchecked_test(unsigned long long) const [159]
-----------------------------------------------
                0.00    0.00   20000/20000       std::pair<std::__detail::_Node_iterator<int, true, false>, bool> std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert_unique<int const&, int const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<int, false> > > >(int const&, int const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<int, false> > > const&) [20]
[161]    0.0    0.00    0.00   20000         unsigned long long std::__detail::_Hash_code_base<int, int, std::__detail::_Identity, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_hash_code_tr<int>(int const&) const [161]
                0.00    0.00   20000/80745       std::__detail::_Hash_code_base<int, int, std::__detail::_Identity, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_hash() const [122]
                0.00    0.00   20000/80745       std::hash<int>::operator()(int) const [121]
-----------------------------------------------
                0.00    0.00   20000/20000       std::pair<std::__detail::_Node_iterator<int, true, false>, bool> std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert<int const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<int, false> > > >(int const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<int, false> > > const&, std::integral_constant<bool, true>) [23]
[162]    0.0    0.00    0.00   20000         int const& std::__detail::_ConvertToValueType<std::__detail::_Identity, int>::operator()<int const&>(int const&) const [162]
                0.00    0.00   20000/302778      int const& std::forward<int const&>(std::remove_reference<int const&>::type&) [118]
-----------------------------------------------
                0.00    0.00   20000/20000       std::pair<std::__detail::_Node_iterator<int, true, false>, bool> std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert_unique_aux<int const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<int, false> > > >(int const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<int, false> > > const&) [21]
[163]    0.0    0.00    0.00   20000         std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_S_forward_key(int const&) [163]
-----------------------------------------------
                0.00    0.00   20000/20000       std::bitset<400000ull>::_Unchecked_set(unsigned long long, int) [170]
[164]    0.0    0.00    0.00   20000         std::_Base_bitset<12500ull>::_M_getword(unsigned long long) [164]
                0.00    0.00   20000/40000       std::_Base_bitset<12500ull>::_S_whichword(unsigned long long) [143]
-----------------------------------------------
                0.00    0.00   20000/20000       std::bitset<400000ull>::reset() [172]
[165]    0.0    0.00    0.00   20000         std::_Base_bitset<12500ull>::_M_do_reset() [165]
-----------------------------------------------
                0.00    0.00   20000/20000       std::bitset<200000ull>::reset() [169]
[166]    0.0    0.00    0.00   20000         std::_Base_bitset<6250ull>::_M_do_reset() [166]
-----------------------------------------------
                0.00    0.00   20000/20000       std::insert_iterator<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > > std::__copy_move<false, false, std::random_access_iterator_tag>::__copy_m<int const*, std::insert_iterator<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > > >(int const*, int const*, std::insert_iterator<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > >) [15]
[167]    0.0    0.00    0.00   20000         std::insert_iterator<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > >::operator*() [167]
-----------------------------------------------
                0.00    0.00   20000/20000       std::insert_iterator<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > > std::__copy_move<false, false, std::random_access_iterator_tag>::__copy_m<int const*, std::insert_iterator<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > > >(int const*, int const*, std::insert_iterator<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > >) [15]
[168]    0.0    0.00    0.00   20000         std::insert_iterator<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > >::operator++() [168]
-----------------------------------------------
                0.00    0.00   20000/20000       winning_instances(std::vector<int, std::allocator<int> > const&, int) [3]
[169]    0.0    0.00    0.00   20000         std::bitset<200000ull>::reset() [169]
                0.00    0.00   20000/20000       std::_Base_bitset<6250ull>::_M_do_reset() [166]
-----------------------------------------------
                0.00    0.00   20000/20000       std::bitset<400000ull>::set(unsigned long long, bool) [171]
[170]    0.0    0.00    0.00   20000         std::bitset<400000ull>::_Unchecked_set(unsigned long long, int) [170]
                0.00    0.00   20000/40000       std::_Base_bitset<12500ull>::_S_maskbit(unsigned long long) [141]
                0.00    0.00   20000/20000       std::_Base_bitset<12500ull>::_M_getword(unsigned long long) [164]
-----------------------------------------------
                0.00    0.00   20000/20000       winning_instances(std::vector<int, std::allocator<int> > const&, int) [3]
[171]    0.0    0.00    0.00   20000         std::bitset<400000ull>::set(unsigned long long, bool) [171]
                0.00    0.00   20000/40000       std::bitset<400000ull>::_M_check(unsigned long long, char const*) const [139]
                0.00    0.00   20000/20000       std::bitset<400000ull>::_Unchecked_set(unsigned long long, int) [170]
-----------------------------------------------
                0.00    0.00   20000/20000       winning_instances(std::vector<int, std::allocator<int> > const&, int) [3]
[172]    0.0    0.00    0.00   20000         std::bitset<400000ull>::reset() [172]
                0.00    0.00   20000/20000       std::_Base_bitset<12500ull>::_M_do_reset() [165]
-----------------------------------------------
                0.00    0.00   20000/20000       std::__detail::_Insert_base<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::insert(std::__detail::_Node_const_iterator<int, true, false>, int const&) [25]
[173]    0.0    0.00    0.00   20000         std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<int, false> > >::_AllocNode(std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<int, false> > >&) [173]
-----------------------------------------------
                0.00    0.00   20000/20000       std::__detail::_Insert_base<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::insert(std::__detail::_Node_const_iterator<int, true, false>, int const&) [25]
[174]    0.0    0.00    0.00   20000         std::__detail::_Insert_base<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_conjure_hashtable() [174]
-----------------------------------------------
                0.00    0.00   20000/20000       std::insert_iterator<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > >::operator=(int const&) [14]
[175]    0.0    0.00    0.00   20000         std::__detail::_Node_const_iterator<int, true, false>::_Node_const_iterator(std::__detail::_Node_iterator<int, true, false> const&) [175]
                0.00    0.00   20000/80003       std::__detail::_Node_iterator_base<int, false>::_Node_iterator_base(std::__detail::_Hash_node<int, false>*) [124]
-----------------------------------------------
                0.00    0.00    5003/20000       std::pair<std::__detail::_Node_iterator<int, true, false>, bool>::pair<std::__detail::_Node_iterator<int, true, false>, bool, true>(std::__detail::_Node_iterator<int, true, false>&&, bool&&) [198]
                0.00    0.00   14997/20000       std::pair<std::__detail::_Node_iterator<int, true, false>, bool>::pair<std::__detail::_Node_iterator<int, true, false>&, bool, true>(std::__detail::_Node_iterator<int, true, false>&, bool&&) [185]
[176]    0.0    0.00    0.00   20000         bool&& std::forward<bool>(std::remove_reference<bool>::type&) [176]
-----------------------------------------------
                0.00    0.00   14997/14997       std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<int, false> > >::__node_type* std::__detail::_NodeBuilder<std::__detail::_Identity>::_S_build<int const&, int const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<int, false> > > >(int const&, int const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<int, false> > > const&) [187]
[177]    0.0    0.00    0.00   14997         std::__detail::_Hash_node<int, false>* std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<int, false> > >::operator()<int const&>(int const&) const [177]
                0.00    0.00   14997/302778      int const& std::forward<int const&>(std::remove_reference<int const&>::type&) [118]
                0.00    0.00   14997/14997       std::__detail::_Hash_node<int, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<int, false> > >::_M_allocate_node<int const&>(int const&) [189]
-----------------------------------------------
                0.00    0.00   14997/14997       std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert_unique_node(unsigned long long, unsigned long long, std::__detail::_Hash_node<int, false>*, unsigned long long) [26]
[178]    0.0    0.00    0.00   14997         std::__detail::_Hash_code_base<int, int, std::__detail::_Identity, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_store_code(std::__detail::_Hash_node_code_cache<false>&, unsigned long long) const [178]
-----------------------------------------------
                0.00    0.00   14997/14997       std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert_unique_node(unsigned long long, unsigned long long, std::__detail::_Hash_node<int, false>*, unsigned long long) [26]
[179]    0.0    0.00    0.00   14997         std::__detail::_Prime_rehash_policy::_M_state() const [179]
-----------------------------------------------
                0.00    0.00   14997/14997       std::pair<std::__detail::_Node_iterator<int, true, false>, bool> std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert_unique<int const&, int const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<int, false> > > >(int const&, int const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<int, false> > > const&) [20]
[180]    0.0    0.00    0.00   14997         std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_Scoped_node::_Scoped_node(std::__detail::_Hash_node<int, false>*, std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<int, false> > >*) [180]
-----------------------------------------------
                0.00    0.00   14997/14997       std::pair<std::__detail::_Node_iterator<int, true, false>, bool> std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert_unique<int const&, int const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<int, false> > > >(int const&, int const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<int, false> > > const&) [20]
[181]    0.0    0.00    0.00   14997         std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_Scoped_node::~_Scoped_node() [181]
-----------------------------------------------
                0.00    0.00   14997/14997       std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<int, false> > >::_M_deallocate_node_ptr(std::__detail::_Hash_node<int, false>*) [191]
[182]    0.0    0.00    0.00   14997         std::__new_allocator<std::__detail::_Hash_node<int, false> >::deallocate(std::__detail::_Hash_node<int, false>*, unsigned long long) [182]
-----------------------------------------------
                0.00    0.00   14997/14997       std::__detail::_Hash_node<int, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<int, false> > >::_M_allocate_node<int const&>(int const&) [189]
[183]    0.0    0.00    0.00   14997         std::__new_allocator<std::__detail::_Hash_node<int, false> >::allocate(unsigned long long, void const*) [183]
-----------------------------------------------
                0.00    0.00   14997/14997       std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<int, false> > >::_M_deallocate_node_ptr(std::__detail::_Hash_node<int, false>*) [191]
[184]    0.0    0.00    0.00   14997         std::__ptr_traits_ptr_to<std::__detail::_Hash_node<int, false>*, std::__detail::_Hash_node<int, false>, false>::pointer_to(std::__detail::_Hash_node<int, false>&) [184]
                0.00    0.00   14997/14997       std::__detail::_Hash_node<int, false>* std::addressof<std::__detail::_Hash_node<int, false> >(std::__detail::_Hash_node<int, false>&) [195]
-----------------------------------------------
                0.00    0.00   14997/14997       std::pair<std::__detail::_Node_iterator<int, true, false>, bool> std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert_unique<int const&, int const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<int, false> > > >(int const&, int const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<int, false> > > const&) [20]
[185]    0.0    0.00    0.00   14997         std::pair<std::__detail::_Node_iterator<int, true, false>, bool>::pair<std::__detail::_Node_iterator<int, true, false>&, bool, true>(std::__detail::_Node_iterator<int, true, false>&, bool&&) [185]
                0.00    0.00   14997/14997       std::__detail::_Node_iterator<int, true, false>& std::forward<std::__detail::_Node_iterator<int, true, false>&>(std::remove_reference<std::__detail::_Node_iterator<int, true, false>&>::type&) [194]
                0.00    0.00   14997/20000       bool&& std::forward<bool>(std::remove_reference<bool>::type&) [176]
-----------------------------------------------
                0.00    0.00   14997/14997       std::__detail::_Hash_node<int, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<int, false> > >::_M_allocate_node<int const&>(int const&) [189]
[186]    0.0    0.00    0.00   14997         std::__detail::_Hash_node<int, false>::_Hash_node() [186]
                0.00    0.00   14997/14997       std::__detail::_Hash_node_base::_Hash_node_base() [188]
-----------------------------------------------
                0.00    0.00   14997/14997       std::pair<std::__detail::_Node_iterator<int, true, false>, bool> std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert_unique<int const&, int const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<int, false> > > >(int const&, int const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<int, false> > > const&) [20]
[187]    0.0    0.00    0.00   14997         std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<int, false> > >::__node_type* std::__detail::_NodeBuilder<std::__detail::_Identity>::_S_build<int const&, int const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<int, false> > > >(int const&, int const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<int, false> > > const&) [187]
                0.00    0.00   14997/302778      int const& std::forward<int const&>(std::remove_reference<int const&>::type&) [118]
                0.00    0.00   14997/14997       std::__detail::_Hash_node<int, false>* std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<int, false> > >::operator()<int const&>(int const&) const [177]
-----------------------------------------------
                0.00    0.00   14997/14997       std::__detail::_Hash_node<int, false>::_Hash_node() [186]
[188]    0.0    0.00    0.00   14997         std::__detail::_Hash_node_base::_Hash_node_base() [188]
-----------------------------------------------
                0.00    0.00   14997/14997       std::__detail::_Hash_node<int, false>* std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<int, false> > >::operator()<int const&>(int const&) const [177]
[189]    0.0    0.00    0.00   14997         std::__detail::_Hash_node<int, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<int, false> > >::_M_allocate_node<int const&>(int const&) [189]
                0.00    0.00   44991/302778      int const& std::forward<int const&>(std::remove_reference<int const&>::type&) [118]
                0.00    0.00   29994/60010       std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<int, false> > >::_M_node_allocator() [130]
                0.00    0.00   29994/29997       operator new(unsigned long long, void*) [148]
                0.00    0.00   14997/14997       std::__new_allocator<std::__detail::_Hash_node<int, false> >::allocate(unsigned long long, void const*) [183]
                0.00    0.00   14997/14997       std::__detail::_Hash_node<int, false>* std::__to_address<std::__detail::_Hash_node<int, false> >(std::__detail::_Hash_node<int, false>*) [193]
                0.00    0.00   14997/14997       std::__detail::_Hash_node<int, false>::_Hash_node() [186]
                0.00    0.00   14997/29994       std::__detail::_Hash_node_value_base<int>::_M_valptr() [151]
-----------------------------------------------
                0.00    0.00   14997/14997       std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<int, false> > >::_M_deallocate_nodes(std::__detail::_Hash_node<int, false>*) [34]
[190]    0.0    0.00    0.00   14997         std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<int, false> > >::_M_deallocate_node(std::__detail::_Hash_node<int, false>*) [190]
                0.00    0.00   14997/29994       std::__detail::_Hash_node_value_base<int>::_M_valptr() [151]
                0.00    0.00   14997/60010       std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<int, false> > >::_M_node_allocator() [130]
                0.00    0.00   14997/14997       std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<int, false> > >::_M_deallocate_node_ptr(std::__detail::_Hash_node<int, false>*) [191]
-----------------------------------------------
                0.00    0.00   14997/14997       std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<int, false> > >::_M_deallocate_node(std::__detail::_Hash_node<int, false>*) [190]
[191]    0.0    0.00    0.00   14997         std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<int, false> > >::_M_deallocate_node_ptr(std::__detail::_Hash_node<int, false>*) [191]
                0.00    0.00   14997/14997       std::__ptr_traits_ptr_to<std::__detail::_Hash_node<int, false>*, std::__detail::_Hash_node<int, false>, false>::pointer_to(std::__detail::_Hash_node<int, false>&) [184]
                0.00    0.00   14997/60010       std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<int, false> > >::_M_node_allocator() [130]
                0.00    0.00   14997/14997       std::__new_allocator<std::__detail::_Hash_node<int, false> >::deallocate(std::__detail::_Hash_node<int, false>*, unsigned long long) [182]
-----------------------------------------------
                0.00    0.00   14997/14997       std::__detail::_Hash_node<int, false>* std::addressof<std::__detail::_Hash_node<int, false> >(std::__detail::_Hash_node<int, false>&) [195]
[192]    0.0    0.00    0.00   14997         std::__detail::_Hash_node<int, false>* std::__addressof<std::__detail::_Hash_node<int, false> >(std::__detail::_Hash_node<int, false>&) [192]
-----------------------------------------------
                0.00    0.00   14997/14997       std::__detail::_Hash_node<int, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<int, false> > >::_M_allocate_node<int const&>(int const&) [189]
[193]    0.0    0.00    0.00   14997         std::__detail::_Hash_node<int, false>* std::__to_address<std::__detail::_Hash_node<int, false> >(std::__detail::_Hash_node<int, false>*) [193]
-----------------------------------------------
                0.00    0.00   14997/14997       std::pair<std::__detail::_Node_iterator<int, true, false>, bool>::pair<std::__detail::_Node_iterator<int, true, false>&, bool, true>(std::__detail::_Node_iterator<int, true, false>&, bool&&) [185]
[194]    0.0    0.00    0.00   14997         std::__detail::_Node_iterator<int, true, false>& std::forward<std::__detail::_Node_iterator<int, true, false>&>(std::remove_reference<std::__detail::_Node_iterator<int, true, false>&>::type&) [194]
-----------------------------------------------
                0.00    0.00   14997/14997       std::__ptr_traits_ptr_to<std::__detail::_Hash_node<int, false>*, std::__detail::_Hash_node<int, false>, false>::pointer_to(std::__detail::_Hash_node<int, false>&) [184]
[195]    0.0    0.00    0.00   14997         std::__detail::_Hash_node<int, false>* std::addressof<std::__detail::_Hash_node<int, false> >(std::__detail::_Hash_node<int, false>&) [195]
                0.00    0.00   14997/14997       std::__detail::_Hash_node<int, false>* std::__addressof<std::__detail::_Hash_node<int, false> >(std::__detail::_Hash_node<int, false>&) [192]
-----------------------------------------------
                0.00    0.00   13579/13579       std::__detail::_Hash_node_base* std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_find_before_node_tr<int>(unsigned long long, int const&, unsigned long long) const [36]
[196]    0.0    0.00    0.00   13579         bool std::__detail::_Hashtable_base<int, int, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, true, true> >::_M_equals_tr<int>(int const&, unsigned long long, std::__detail::_Hash_node_value<int, false> const&) const [196]
                0.00    0.00   13579/37054       std::__detail::_Hashtable_base<int, int, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, true, true> >::_S_equals(unsigned long long, std::__detail::_Hash_node_code_cache<false> const&) [147]
                0.00    0.00   13579/13579       bool std::__detail::_Hashtable_base<int, int, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, true, true> >::_M_key_equals_tr<int>(int const&, std::__detail::_Hash_node_value<int, false> const&) const [197]
-----------------------------------------------
                0.00    0.00   13579/13579       bool std::__detail::_Hashtable_base<int, int, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, true, true> >::_M_equals_tr<int>(int const&, unsigned long long, std::__detail::_Hash_node_value<int, false> const&) const [196]
[197]    0.0    0.00    0.00   13579         bool std::__detail::_Hashtable_base<int, int, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, true, true> >::_M_key_equals_tr<int>(int const&, std::__detail::_Hash_node_value<int, false> const&) const [197]
                0.00    0.00   13579/37054       std::__detail::_Hashtable_base<int, int, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, true, true> >::_M_eq() const [144]
                0.00    0.00   13579/77799       std::__detail::_Hash_node_value_base<int>::_M_v() const [127]
                0.00    0.00   13579/97799       int const& std::__detail::_Identity::operator()<int const&>(int const&) const [119]
                0.00    0.00   13579/37054       std::equal_to<int>::operator()(int const&, int const&) const [146]
-----------------------------------------------
                0.00    0.00    5003/5003        std::pair<std::__detail::_Node_iterator<int, true, false>, bool> std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert_unique<int const&, int const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<int, false> > > >(int const&, int const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<int, false> > > const&) [20]
[198]    0.0    0.00    0.00    5003         std::pair<std::__detail::_Node_iterator<int, true, false>, bool>::pair<std::__detail::_Node_iterator<int, true, false>, bool, true>(std::__detail::_Node_iterator<int, true, false>&&, bool&&) [198]
                0.00    0.00    5003/5003        std::__detail::_Node_iterator<int, true, false>&& std::forward<std::__detail::_Node_iterator<int, true, false> >(std::remove_reference<std::__detail::_Node_iterator<int, true, false> >::type&) [199]
                0.00    0.00    5003/20000       bool&& std::forward<bool>(std::remove_reference<bool>::type&) [176]
-----------------------------------------------
                0.00    0.00    5003/5003        std::pair<std::__detail::_Node_iterator<int, true, false>, bool>::pair<std::__detail::_Node_iterator<int, true, false>, bool, true>(std::__detail::_Node_iterator<int, true, false>&&, bool&&) [198]
[199]    0.0    0.00    0.00    5003         std::__detail::_Node_iterator<int, true, false>&& std::forward<std::__detail::_Node_iterator<int, true, false> >(std::remove_reference<std::__detail::_Node_iterator<int, true, false> >::type&) [199]
-----------------------------------------------
                0.00    0.00      11/22          std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<int, false> > >::_M_allocate_buckets(unsigned long long) [209]
                0.00    0.00      11/22          std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<int, false> > >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned long long) [210]
[200]    0.0    0.00    0.00      22         std::__new_allocator<std::__detail::_Hash_node_base*>::~__new_allocator() [200]
-----------------------------------------------
                0.00    0.00       1/13          std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::begin() [252]
                0.00    0.00       1/13          std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::clear() [31]
                0.00    0.00      11/13          std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_rehash_aux(unsigned long long, std::integral_constant<bool, true>) [29]
[201]    0.0    0.00    0.00      13         std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_begin() const [201]
-----------------------------------------------
                0.00    0.00      12/12          std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned long long) [203]
[202]    0.0    0.00    0.00      12         std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_uses_single_bucket(std::__detail::_Hash_node_base**) const [202]
-----------------------------------------------
                0.00    0.00      12/12          std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_deallocate_buckets() [204]
[203]    0.0    0.00    0.00      12         std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned long long) [203]
                0.00    0.00      12/12          std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_uses_single_bucket(std::__detail::_Hash_node_base**) const [202]
                0.00    0.00      11/11          std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<int, false> > >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned long long) [210]
-----------------------------------------------
                0.00    0.00       1/12          std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::~_Hashtable() [32]
                0.00    0.00      11/12          std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_rehash_aux(unsigned long long, std::integral_constant<bool, true>) [29]
[204]    0.0    0.00    0.00      12         std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_deallocate_buckets() [204]
                0.00    0.00      12/12          std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned long long) [203]
-----------------------------------------------
                0.00    0.00      11/11          std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_rehash_aux(unsigned long long, std::integral_constant<bool, true>) [29]
[205]    0.0    0.00    0.00      11         std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_allocate_buckets(unsigned long long) [205]
                0.00    0.00      11/11          std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<int, false> > >::_M_allocate_buckets(unsigned long long) [209]
-----------------------------------------------
                0.00    0.00      11/11          std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<int, false> > >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned long long) [210]
[206]    0.0    0.00    0.00      11         std::__new_allocator<std::__detail::_Hash_node_base*>::deallocate(std::__detail::_Hash_node_base**, unsigned long long) [206]
-----------------------------------------------
                0.00    0.00      11/11          std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<int, false> > >::_M_allocate_buckets(unsigned long long) [209]
[207]    0.0    0.00    0.00      11         std::__new_allocator<std::__detail::_Hash_node_base*>::allocate(unsigned long long, void const*) [207]
-----------------------------------------------
                0.00    0.00      11/11          std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<int, false> > >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned long long) [210]
[208]    0.0    0.00    0.00      11         std::__ptr_traits_ptr_to<std::__detail::_Hash_node_base**, std::__detail::_Hash_node_base*, false>::pointer_to(std::__detail::_Hash_node_base*&) [208]
                0.00    0.00      11/11          std::__detail::_Hash_node_base** std::addressof<std::__detail::_Hash_node_base*>(std::__detail::_Hash_node_base*&) [213]
-----------------------------------------------
                0.00    0.00      11/11          std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_allocate_buckets(unsigned long long) [205]
[209]    0.0    0.00    0.00      11         std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<int, false> > >::_M_allocate_buckets(unsigned long long) [209]
                0.00    0.00      11/60010       std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<int, false> > >::_M_node_allocator() [130]
                0.00    0.00      11/11          std::__new_allocator<std::__detail::_Hash_node_base*>::allocate(unsigned long long, void const*) [207]
                0.00    0.00      11/11          std::__detail::_Hash_node_base** std::__to_address<std::__detail::_Hash_node_base*>(std::__detail::_Hash_node_base**) [212]
                0.00    0.00      11/22          std::__new_allocator<std::__detail::_Hash_node_base*>::~__new_allocator() [200]
-----------------------------------------------
                0.00    0.00      11/11          std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned long long) [203]
[210]    0.0    0.00    0.00      11         std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<int, false> > >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned long long) [210]
                0.00    0.00      11/11          std::__ptr_traits_ptr_to<std::__detail::_Hash_node_base**, std::__detail::_Hash_node_base*, false>::pointer_to(std::__detail::_Hash_node_base*&) [208]
                0.00    0.00      11/60010       std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<int, false> > >::_M_node_allocator() [130]
                0.00    0.00      11/11          std::__new_allocator<std::__detail::_Hash_node_base*>::deallocate(std::__detail::_Hash_node_base**, unsigned long long) [206]
                0.00    0.00      11/22          std::__new_allocator<std::__detail::_Hash_node_base*>::~__new_allocator() [200]
-----------------------------------------------
                0.00    0.00      11/11          std::__detail::_Hash_node_base** std::addressof<std::__detail::_Hash_node_base*>(std::__detail::_Hash_node_base*&) [213]
[211]    0.0    0.00    0.00      11         std::__detail::_Hash_node_base** std::__addressof<std::__detail::_Hash_node_base*>(std::__detail::_Hash_node_base*&) [211]
-----------------------------------------------
                0.00    0.00      11/11          std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<int, false> > >::_M_allocate_buckets(unsigned long long) [209]
[212]    0.0    0.00    0.00      11         std::__detail::_Hash_node_base** std::__to_address<std::__detail::_Hash_node_base*>(std::__detail::_Hash_node_base**) [212]
-----------------------------------------------
                0.00    0.00      11/11          std::__ptr_traits_ptr_to<std::__detail::_Hash_node_base**, std::__detail::_Hash_node_base*, false>::pointer_to(std::__detail::_Hash_node_base*&) [208]
[213]    0.0    0.00    0.00      11         std::__detail::_Hash_node_base** std::addressof<std::__detail::_Hash_node_base*>(std::__detail::_Hash_node_base*&) [213]
                0.00    0.00      11/11          std::__detail::_Hash_node_base** std::__addressof<std::__detail::_Hash_node_base*>(std::__detail::_Hash_node_base*&) [211]
-----------------------------------------------
                0.00    0.00       1/9           main [2]
                0.00    0.00       2/9           winning_instances(std::vector<int, std::allocator<int> > const&, int) [3]
                0.00    0.00       3/9           std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl() [220]
                0.00    0.00       3/9           std::vector<int, std::allocator<int> >::_S_check_init_len(unsigned long long, std::allocator<int> const&) [230]
[214]    0.0    0.00    0.00       9         std::__new_allocator<int>::~__new_allocator() [214]
-----------------------------------------------
                0.00    0.00       3/6           std::vector<int, std::allocator<int> >::_M_default_initialize(unsigned long long) [231]
                0.00    0.00       3/6           std::vector<int, std::allocator<int> >::~vector() [233]
[215]    0.0    0.00    0.00       6         std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() [215]
-----------------------------------------------
                0.00    0.00       1/4           void std::__fill_a1<int*, std::vector<int, std::allocator<int> >, int>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&) [275]
                0.00    0.00       3/4           void std::__fill_a<int*, int>(int*, int*, int const&) [243]
[216]    0.0    0.00    0.00       4         __gnu_cxx::__enable_if<std::__is_scalar<int>::__value, void>::__type std::__fill_a1<int*, int>(int*, int*, int const&) [216]
-----------------------------------------------
                0.00    0.00       3/3           void std::_Destroy<int*>(int*, int*) [242]
[217]    0.0    0.00    0.00       3         void std::_Destroy_aux<true>::__destroy<int*>(int*, int*) [217]
-----------------------------------------------
                0.00    0.00       3/3           std::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned long long) [222]
[218]    0.0    0.00    0.00       3         std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long long) [218]
                0.00    0.00       3/3           std::__new_allocator<int>::allocate(unsigned long long, void const*) [227]
-----------------------------------------------
                0.00    0.00       3/3           std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long long, std::allocator<int> const&) [224]
[219]    0.0    0.00    0.00       3         std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl(std::allocator<int> const&) [219]
                0.00    0.00       3/3           std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data() [223]
-----------------------------------------------
                0.00    0.00       3/3           std::_Vector_base<int, std::allocator<int> >::~_Vector_base() [225]
[220]    0.0    0.00    0.00       3         std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl() [220]
                0.00    0.00       3/9           std::__new_allocator<int>::~__new_allocator() [214]
-----------------------------------------------
                0.00    0.00       3/3           std::_Vector_base<int, std::allocator<int> >::~_Vector_base() [225]
[221]    0.0    0.00    0.00       3         std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long long) [221]
                0.00    0.00       3/3           std::__new_allocator<int>::deallocate(int*, unsigned long long) [226]
-----------------------------------------------
                0.00    0.00       3/3           std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long long, std::allocator<int> const&) [224]
[222]    0.0    0.00    0.00       3         std::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned long long) [222]
                0.00    0.00       3/3           std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long long) [218]
-----------------------------------------------
                0.00    0.00       3/3           std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl(std::allocator<int> const&) [219]
[223]    0.0    0.00    0.00       3         std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data() [223]
-----------------------------------------------
                0.00    0.00       3/3           std::vector<int, std::allocator<int> >::vector(unsigned long long, std::allocator<int> const&) [232]
[224]    0.0    0.00    0.00       3         std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long long, std::allocator<int> const&) [224]
                0.00    0.00       3/3           std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl(std::allocator<int> const&) [219]
                0.00    0.00       3/3           std::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned long long) [222]
-----------------------------------------------
                0.00    0.00       3/3           std::vector<int, std::allocator<int> >::~vector() [233]
[225]    0.0    0.00    0.00       3         std::_Vector_base<int, std::allocator<int> >::~_Vector_base() [225]
                0.00    0.00       3/3           std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long long) [221]
                0.00    0.00       3/3           std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl() [220]
-----------------------------------------------
                0.00    0.00       3/3           std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long long) [221]
[226]    0.0    0.00    0.00       3         std::__new_allocator<int>::deallocate(int*, unsigned long long) [226]
-----------------------------------------------
                0.00    0.00       3/3           std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long long) [218]
[227]    0.0    0.00    0.00       3         std::__new_allocator<int>::allocate(unsigned long long, void const*) [227]
-----------------------------------------------
                0.00    0.00       3/3           int* std::__uninitialized_default_n<int*, unsigned long long>(int*, unsigned long long) [238]
[228]    0.0    0.00    0.00       3         int* std::__uninitialized_default_n_1<true>::__uninit_default_n<int*, unsigned long long>(int*, unsigned long long) [228]
                0.00    0.00       3/3           int* std::__addressof<int>(int&) [236]
                0.00    0.00       3/3           void std::_Construct<int>(int*) [234]
                0.00    0.00       3/3           int* std::fill_n<int*, unsigned long long, int>(int*, unsigned long long, int const&) [241]
-----------------------------------------------
                0.00    0.00       3/3           std::vector<int, std::allocator<int> >::_S_check_init_len(unsigned long long, std::allocator<int> const&) [230]
[229]    0.0    0.00    0.00       3         std::vector<int, std::allocator<int> >::_S_max_size(std::allocator<int> const&) [229]
                0.00    0.00       3/3           unsigned long long const& std::min<unsigned long long>(unsigned long long const&, unsigned long long const&) [240]
-----------------------------------------------
                0.00    0.00       3/3           std::vector<int, std::allocator<int> >::vector(unsigned long long, std::allocator<int> const&) [232]
[230]    0.0    0.00    0.00       3         std::vector<int, std::allocator<int> >::_S_check_init_len(unsigned long long, std::allocator<int> const&) [230]
                0.00    0.00       3/3           std::vector<int, std::allocator<int> >::_S_max_size(std::allocator<int> const&) [229]
                0.00    0.00       3/9           std::__new_allocator<int>::~__new_allocator() [214]
-----------------------------------------------
                0.00    0.00       3/3           std::vector<int, std::allocator<int> >::vector(unsigned long long, std::allocator<int> const&) [232]
[231]    0.0    0.00    0.00       3         std::vector<int, std::allocator<int> >::_M_default_initialize(unsigned long long) [231]
                0.00    0.00       3/6           std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() [215]
                0.00    0.00       3/3           int* std::__uninitialized_default_n_a<int*, unsigned long long, int>(int*, unsigned long long, std::allocator<int>&) [239]
-----------------------------------------------
                0.00    0.00       1/3           main [2]
                0.00    0.00       2/3           winning_instances(std::vector<int, std::allocator<int> > const&, int) [3]
[232]    0.0    0.00    0.00       3         std::vector<int, std::allocator<int> >::vector(unsigned long long, std::allocator<int> const&) [232]
                0.00    0.00       3/3           std::vector<int, std::allocator<int> >::_S_check_init_len(unsigned long long, std::allocator<int> const&) [230]
                0.00    0.00       3/3           std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long long, std::allocator<int> const&) [224]
                0.00    0.00       3/3           std::vector<int, std::allocator<int> >::_M_default_initialize(unsigned long long) [231]
-----------------------------------------------
                0.00    0.00       1/3           main [2]
                0.00    0.00       2/3           winning_instances(std::vector<int, std::allocator<int> > const&, int) [3]
[233]    0.0    0.00    0.00       3         std::vector<int, std::allocator<int> >::~vector() [233]
                0.00    0.00       3/6           std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() [215]
                0.00    0.00       3/3           void std::_Destroy<int*>(int*, int*) [242]
                0.00    0.00       3/3           std::_Vector_base<int, std::allocator<int> >::~_Vector_base() [225]
-----------------------------------------------
                0.00    0.00       3/3           int* std::__uninitialized_default_n_1<true>::__uninit_default_n<int*, unsigned long long>(int*, unsigned long long) [228]
[234]    0.0    0.00    0.00       3         void std::_Construct<int>(int*) [234]
                0.00    0.00       3/29997       operator new(unsigned long long, void*) [148]
-----------------------------------------------
                0.00    0.00       3/3           int* std::fill_n<int*, unsigned long long, int>(int*, unsigned long long, int const&) [241]
[235]    0.0    0.00    0.00       3         int* std::__fill_n_a<int*, unsigned long long, int>(int*, unsigned long long, int const&, std::random_access_iterator_tag) [235]
                0.00    0.00       3/3           void std::__fill_a<int*, int>(int*, int*, int const&) [243]
-----------------------------------------------
                0.00    0.00       3/3           int* std::__uninitialized_default_n_1<true>::__uninit_default_n<int*, unsigned long long>(int*, unsigned long long) [228]
[236]    0.0    0.00    0.00       3         int* std::__addressof<int>(int&) [236]
-----------------------------------------------
                0.00    0.00       3/3           int* std::fill_n<int*, unsigned long long, int>(int*, unsigned long long, int const&) [241]
[237]    0.0    0.00    0.00       3         std::__size_to_integer(unsigned long long) [237]
-----------------------------------------------
                0.00    0.00       3/3           int* std::__uninitialized_default_n_a<int*, unsigned long long, int>(int*, unsigned long long, std::allocator<int>&) [239]
[238]    0.0    0.00    0.00       3         int* std::__uninitialized_default_n<int*, unsigned long long>(int*, unsigned long long) [238]
                0.00    0.00       3/3           int* std::__uninitialized_default_n_1<true>::__uninit_default_n<int*, unsigned long long>(int*, unsigned long long) [228]
-----------------------------------------------
                0.00    0.00       3/3           std::vector<int, std::allocator<int> >::_M_default_initialize(unsigned long long) [231]
[239]    0.0    0.00    0.00       3         int* std::__uninitialized_default_n_a<int*, unsigned long long, int>(int*, unsigned long long, std::allocator<int>&) [239]
                0.00    0.00       3/3           int* std::__uninitialized_default_n<int*, unsigned long long>(int*, unsigned long long) [238]
-----------------------------------------------
                0.00    0.00       3/3           std::vector<int, std::allocator<int> >::_S_max_size(std::allocator<int> const&) [229]
[240]    0.0    0.00    0.00       3         unsigned long long const& std::min<unsigned long long>(unsigned long long const&, unsigned long long const&) [240]
-----------------------------------------------
                0.00    0.00       3/3           int* std::__uninitialized_default_n_1<true>::__uninit_default_n<int*, unsigned long long>(int*, unsigned long long) [228]
[241]    0.0    0.00    0.00       3         int* std::fill_n<int*, unsigned long long, int>(int*, unsigned long long, int const&) [241]
                0.00    0.00       3/3           std::__size_to_integer(unsigned long long) [237]
                0.00    0.00       3/3           int* std::__fill_n_a<int*, unsigned long long, int>(int*, unsigned long long, int const&, std::random_access_iterator_tag) [235]
-----------------------------------------------
                0.00    0.00       3/3           std::vector<int, std::allocator<int> >::~vector() [233]
[242]    0.0    0.00    0.00       3         void std::_Destroy<int*>(int*, int*) [242]
                0.00    0.00       3/3           void std::_Destroy_aux<true>::__destroy<int*>(int*, int*) [217]
-----------------------------------------------
                0.00    0.00       3/3           int* std::__fill_n_a<int*, unsigned long long, int>(int*, unsigned long long, int const&, std::random_access_iterator_tag) [235]
[243]    0.0    0.00    0.00       3         void std::__fill_a<int*, int>(int*, int*, int const&) [243]
                0.00    0.00       3/4           __gnu_cxx::__enable_if<std::__is_scalar<int>::__value, void>::__type std::__fill_a1<int*, int>(int*, int*, int const&) [216]
-----------------------------------------------
                0.00    0.00       1/2           std::vector<int, std::allocator<int> >::end() const [250]
                0.00    0.00       1/2           std::vector<int, std::allocator<int> >::begin() const [251]
[244]    0.0    0.00    0.00       2         __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator(int const* const&) [244]
-----------------------------------------------
                0.00    0.00       1/2           std::vector<int, std::allocator<int> >::end() [257]
                0.00    0.00       1/2           std::vector<int, std::allocator<int> >::begin() [258]
[245]    0.0    0.00    0.00       2         __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&) [245]
-----------------------------------------------
                0.00    0.00       2/2           int const* std::__niter_base<int const*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >) [249]
[246]    0.0    0.00    0.00       2         __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base() const [246]
-----------------------------------------------
                0.00    0.00       2/2           void std::__fill_a1<int*, std::vector<int, std::allocator<int> >, int>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&) [275]
[247]    0.0    0.00    0.00       2         __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const [247]
-----------------------------------------------
                0.00    0.00       2/2           std::insert_iterator<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > > std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, std::insert_iterator<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, std::insert_iterator<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > >) [19]
[248]    0.0    0.00    0.00       2         __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >) [248]
-----------------------------------------------
                0.00    0.00       2/2           std::insert_iterator<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > > std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, std::insert_iterator<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, std::insert_iterator<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > >) [16]
[249]    0.0    0.00    0.00       2         int const* std::__niter_base<int const*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >) [249]
                0.00    0.00       2/2           __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base() const [246]
-----------------------------------------------
                0.00    0.00       1/1           winning_instances(std::vector<int, std::allocator<int> > const&, int) [3]
[250]    0.0    0.00    0.00       1         std::vector<int, std::allocator<int> >::end() const [250]
                0.00    0.00       1/2           __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator(int const* const&) [244]
-----------------------------------------------
                0.00    0.00       1/1           winning_instances(std::vector<int, std::allocator<int> > const&, int) [3]
[251]    0.0    0.00    0.00       1         std::vector<int, std::allocator<int> >::begin() const [251]
                0.00    0.00       1/2           __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator(int const* const&) [244]
-----------------------------------------------
                0.00    0.00       1/1           std::pair<std::__detail::_Node_iterator<int, true, false>, bool> std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert_unique<int const&, int const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<int, false> > > >(int const&, int const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<int, false> > > const&) [20]
[252]    0.0    0.00    0.00       1         std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::begin() [252]
                0.00    0.00       1/13          std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_begin() const [201]
                0.00    0.00       1/60003       std::__detail::_Node_iterator<int, true, false>::_Node_iterator(std::__detail::_Hash_node<int, false>*) [132]
-----------------------------------------------
                0.00    0.00       1/1           std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> >::unordered_set() [254]
[253]    0.0    0.00    0.00       1         std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_Hashtable() [253]
                0.00    0.00       1/1           std::__detail::_Hashtable_base<int, int, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, true, true> >::_Hashtable_base() [261]
                0.00    0.00       1/1           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<int, false> > >::_Hashtable_alloc() [262]
                0.00    0.00       1/1           std::__detail::_Hash_node_base::_Hash_node_base() [260]
                0.00    0.00       1/1           std::__detail::_Prime_rehash_policy::_Prime_rehash_policy(float) [264]
-----------------------------------------------
                0.00    0.00       1/1           winning_instances(std::vector<int, std::allocator<int> > const&, int) [3]
[254]    0.0    0.00    0.00       1         std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> >::unordered_set() [254]
                0.00    0.00       1/1           std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_Hashtable() [253]
-----------------------------------------------
                0.00    0.00       1/1           std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<int, false> >, true>::~_Hashtable_ebo_helper() [266]
[255]    0.0    0.00    0.00       1         std::__new_allocator<std::__detail::_Hash_node<int, false> >::~__new_allocator() [255]
-----------------------------------------------
                0.00    0.00       1/1           std::insert_iterator<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > > std::inserter<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > >(std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> >&, std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> >::iterator) [274]
[256]    0.0    0.00    0.00       1         std::insert_iterator<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > >::insert_iterator(std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> >&, std::__detail::_Node_iterator<int, true, false>) [256]
                0.00    0.00       1/1           std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> >* std::__addressof<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > >(std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> >&) [269]
-----------------------------------------------
                0.00    0.00       1/1           winning_instances(std::vector<int, std::allocator<int> > const&, int) [3]
[257]    0.0    0.00    0.00       1         std::vector<int, std::allocator<int> >::end() [257]
                0.00    0.00       1/2           __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&) [245]
-----------------------------------------------
                0.00    0.00       1/1           winning_instances(std::vector<int, std::allocator<int> > const&, int) [3]
[258]    0.0    0.00    0.00       1         std::vector<int, std::allocator<int> >::begin() [258]
                0.00    0.00       1/2           __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&) [245]
-----------------------------------------------
                0.00    0.00       1/1           std::__detail::_Hashtable_base<int, int, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, true, true> >::_Hashtable_base() [261]
[259]    0.0    0.00    0.00       1         std::__detail::_Hash_code_base<int, int, std::__detail::_Identity, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_Hash_code_base() [259]
                0.00    0.00       1/1           std::__detail::_Hashtable_ebo_helper<1, std::hash<int>, true>::_Hashtable_ebo_helper() [268]
-----------------------------------------------
                0.00    0.00       1/1           std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_Hashtable() [253]
[260]    0.0    0.00    0.00       1         std::__detail::_Hash_node_base::_Hash_node_base() [260]
-----------------------------------------------
                0.00    0.00       1/1           std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_Hashtable() [253]
[261]    0.0    0.00    0.00       1         std::__detail::_Hashtable_base<int, int, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, true, true> >::_Hashtable_base() [261]
                0.00    0.00       1/1           std::__detail::_Hash_code_base<int, int, std::__detail::_Identity, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_Hash_code_base() [259]
                0.00    0.00       1/1           std::__detail::_Hashtable_ebo_helper<0, std::equal_to<int>, true>::_Hashtable_ebo_helper() [267]
-----------------------------------------------
                0.00    0.00       1/1           std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_Hashtable() [253]
[262]    0.0    0.00    0.00       1         std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<int, false> > >::_Hashtable_alloc() [262]
                0.00    0.00       1/1           std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<int, false> >, true>::_Hashtable_ebo_helper() [265]
-----------------------------------------------
                0.00    0.00       1/1           std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::~_Hashtable() [32]
[263]    0.0    0.00    0.00       1         std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<int, false> > >::~_Hashtable_alloc() [263]
                0.00    0.00       1/1           std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<int, false> >, true>::~_Hashtable_ebo_helper() [266]
-----------------------------------------------
                0.00    0.00       1/1           std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_Hashtable() [253]
[264]    0.0    0.00    0.00       1         std::__detail::_Prime_rehash_policy::_Prime_rehash_policy(float) [264]
-----------------------------------------------
                0.00    0.00       1/1           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<int, false> > >::_Hashtable_alloc() [262]
[265]    0.0    0.00    0.00       1         std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<int, false> >, true>::_Hashtable_ebo_helper() [265]
-----------------------------------------------
                0.00    0.00       1/1           std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<int, false> > >::~_Hashtable_alloc() [263]
[266]    0.0    0.00    0.00       1         std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<int, false> >, true>::~_Hashtable_ebo_helper() [266]
                0.00    0.00       1/1           std::__new_allocator<std::__detail::_Hash_node<int, false> >::~__new_allocator() [255]
-----------------------------------------------
                0.00    0.00       1/1           std::__detail::_Hashtable_base<int, int, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, true, true> >::_Hashtable_base() [261]
[267]    0.0    0.00    0.00       1         std::__detail::_Hashtable_ebo_helper<0, std::equal_to<int>, true>::_Hashtable_ebo_helper() [267]
-----------------------------------------------
                0.00    0.00       1/1           std::__detail::_Hash_code_base<int, int, std::__detail::_Identity, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_Hash_code_base() [259]
[268]    0.0    0.00    0.00       1         std::__detail::_Hashtable_ebo_helper<1, std::hash<int>, true>::_Hashtable_ebo_helper() [268]
-----------------------------------------------
                0.00    0.00       1/1           std::insert_iterator<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > >::insert_iterator(std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> >&, std::__detail::_Node_iterator<int, true, false>) [256]
[269]    0.0    0.00    0.00       1         std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> >* std::__addressof<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > >(std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> >&) [269]
-----------------------------------------------
                0.00    0.00       1/1           std::insert_iterator<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > > std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, std::insert_iterator<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, std::insert_iterator<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > >) [16]
[270]    0.0    0.00    0.00       1         std::insert_iterator<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > > std::__niter_base<std::insert_iterator<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > > >(std::insert_iterator<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > >) [270]
-----------------------------------------------
                0.00    0.00       1/1           std::insert_iterator<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > > std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, std::insert_iterator<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, std::insert_iterator<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > >) [16]
[271]    0.0    0.00    0.00       1         std::insert_iterator<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > > std::__niter_wrap<std::insert_iterator<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > > >(std::insert_iterator<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > > const&, std::insert_iterator<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > >) [271]
-----------------------------------------------
                0.00    0.00       1/1           winning_instances(std::vector<int, std::allocator<int> > const&, int) [3]
[272]    0.0    0.00    0.00       1         void std::fill<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&) [272]
                0.00    0.00       1/1           void std::__fill_a<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&) [273]
-----------------------------------------------
                0.00    0.00       1/1           void std::fill<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&) [272]
[273]    0.0    0.00    0.00       1         void std::__fill_a<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&) [273]
                0.00    0.00       1/1           void std::__fill_a1<int*, std::vector<int, std::allocator<int> >, int>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&) [275]
-----------------------------------------------
                0.00    0.00       1/1           winning_instances(std::vector<int, std::allocator<int> > const&, int) [3]
[274]    0.0    0.00    0.00       1         std::insert_iterator<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > > std::inserter<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > >(std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> >&, std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> >::iterator) [274]
                0.00    0.00       1/1           std::insert_iterator<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > >::insert_iterator(std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> >&, std::__detail::_Node_iterator<int, true, false>) [256]
-----------------------------------------------
                0.00    0.00       1/1           void std::__fill_a<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&) [273]
[275]    0.0    0.00    0.00       1         void std::__fill_a1<int*, std::vector<int, std::allocator<int> >, int>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&) [275]
                0.00    0.00       2/2           __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const [247]
                0.00    0.00       1/4           __gnu_cxx::__enable_if<std::__is_scalar<int>::__value, void>::__type std::__fill_a1<int*, int>(int*, int*, int const&) [216]
-----------------------------------------------
                0.00    0.00       1/1           main [2]
[276]    0.0    0.00    0.00       1         __gcc_deregister_frame [276]
-----------------------------------------------

 This table describes the call tree of the program, and was sorted by
 the total amount of time spent in each function and its children.

 Each entry in this table consists of several lines.  The line with the
 index number at the left hand margin lists the current function.
 The lines above it list the functions that called this function,
 and the lines below it list the functions this one called.
 This line lists:
     index	A unique number given to each element of the table.
		Index numbers are sorted numerically.
		The index number is printed next to every function name so
		it is easier to look up where the function is in the table.

     % time	This is the percentage of the `total' time that was spent
		in this function and its children.  Note that due to
		different viewpoints, functions excluded by options, etc,
		these numbers will NOT add up to 100%.

     self	This is the total amount of time spent in this function.

     children	This is the total amount of time propagated into this
		function by its children.

     called	This is the number of times the function was called.
		If the function called itself recursively, the number
		only includes non-recursive calls, and is followed by
		a `+' and the number of recursive calls.

     name	The name of the current function.  The index number is
		printed after it.  If the function is a member of a
		cycle, the cycle number is printed between the
		function's name and the index number.


 For the function's parents, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the function into this parent.

     children	This is the amount of time that was propagated from
		the function's children into this parent.

     called	This is the number of times this parent called the
		function `/' the total number of times the function
		was called.  Recursive calls to the function are not
		included in the number after the `/'.

     name	This is the name of the parent.  The parent's index
		number is printed after it.  If the parent is a
		member of a cycle, the cycle number is printed between
		the name and the index number.

 If the parents of the function cannot be determined, the word
 `<spontaneous>' is printed in the `name' field, and all the other
 fields are blank.

 For the function's children, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the child into the function.

     children	This is the amount of time that was propagated from the
		child's children to the function.

     called	This is the number of times the function called
		this child `/' the total number of times the child
		was called.  Recursive calls by the child are not
		listed in the number after the `/'.

     name	This is the name of the child.  The child's index
		number is printed after it.  If the child is a
		member of a cycle, the cycle number is printed
		between the name and the index number.

 If there are any cycles (circles) in the call graph, there is an
 entry for the cycle-as-a-whole.  This entry shows who called the
 cycle (as parents) and the members of the cycle (as children.)
 The `+' recursive calls entry shows the number of function calls that
 were internal to the cycle, and the calls entry for each member shows,
 for that member, how many times it was called from other members of
 the cycle.

Copyright (C) 2012-2023 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

Index by function name

   [3] winning_instances(std::vector<int, std::allocator<int> > const&, int) [22] std::__detail::_Node_iterator<int, true, false> std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert<int const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<int, false> > > >(std::__detail::_Node_const_iterator<int, true, false>, int const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<int, false> > > const&, std::integral_constant<bool, true>) [132] std::__detail::_Node_iterator<int, true, false>::_Node_iterator(std::__detail::_Hash_node<int, false>*)
 [149] __gnu_cxx::__aligned_buffer<int>::_M_ptr() [23] std::pair<std::__detail::_Node_iterator<int, true, false>, bool> std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert<int const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<int, false> > > >(int const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<int, false> > > const&, std::integral_constant<bool, true>) [27] std::__detail::_Node_iterator<int, true, false>::operator++()
 [150] __gnu_cxx::__aligned_buffer<int>::_M_addr() [30] std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_rehash(unsigned long long, unsigned long long const&) [259] std::__detail::_Hash_code_base<int, int, std::__detail::_Identity, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_Hash_code_base()
 [244] __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::__normal_iterator(int const* const&) [253] std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_Hashtable() [260] std::__detail::_Hash_node_base::_Hash_node_base()
 [245] __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::__normal_iterator(int* const&) [32] std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::~_Hashtable() [188] std::__detail::_Hash_node_base::_Hash_node_base()
 [125] __gnu_cxx::__aligned_buffer<int>::_M_ptr() const [15] std::insert_iterator<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > > std::__copy_move<false, false, std::random_access_iterator_tag>::__copy_m<int const*, std::insert_iterator<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > > >(int const*, int const*, std::insert_iterator<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > >) [147] std::__detail::_Hashtable_base<int, int, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, true, true> >::_S_equals(unsigned long long, std::__detail::_Hash_node_code_cache<false> const&)
 [126] __gnu_cxx::__aligned_buffer<int>::_M_addr() const [164] std::_Base_bitset<12500ull>::_M_getword(unsigned long long) [261] std::__detail::_Hashtable_base<int, int, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, true, true> >::_Hashtable_base()
 [246] __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >::base() const [141] std::_Base_bitset<12500ull>::_S_maskbit(unsigned long long) [189] std::__detail::_Hash_node<int, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<int, false> > >::_M_allocate_node<int const&>(int const&)
 [247] __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >::base() const [165] std::_Base_bitset<12500ull>::_M_do_reset() [130] std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<int, false> > >::_M_node_allocator()
  [38] std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_find_node(unsigned long long, int const&, unsigned long long) const [142] std::_Base_bitset<12500ull>::_S_whichbit(unsigned long long) [190] std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<int, false> > >::_M_deallocate_node(std::__detail::_Hash_node<int, false>*)
 [154] std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_bucket_index(std::__detail::_Hash_node_value<int, false> const&) const [143] std::_Base_bitset<12500ull>::_S_whichword(unsigned long long) [209] std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<int, false> > >::_M_allocate_buckets(unsigned long long)
 [137] std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_bucket_index(unsigned long long) const [44] std::_Base_bitset<6250ull>::_M_getword(unsigned long long) [34] std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<int, false> > >::_M_deallocate_nodes(std::__detail::_Hash_node<int, false>*)
  [35] std::__detail::_Hash_node<int, false>* std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_find_node_tr<int>(unsigned long long, int const&, unsigned long long) const [7] std::_Base_bitset<6250ull>::_S_maskbit(unsigned long long) [210] std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<int, false> > >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned long long)
  [39] std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_find_before_node(unsigned long long, int const&, unsigned long long) const [166] std::_Base_bitset<6250ull>::_M_do_reset() [191] std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<int, false> > >::_M_deallocate_node_ptr(std::__detail::_Hash_node<int, false>*)
 [202] std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_uses_single_bucket(std::__detail::_Hash_node_base**) const [10] std::_Base_bitset<6250ull>::_S_whichbit(unsigned long long) [262] std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<int, false> > >::_Hashtable_alloc()
  [36] std::__detail::_Hash_node_base* std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_find_before_node_tr<int>(unsigned long long, int const&, unsigned long long) const [9] std::_Base_bitset<6250ull>::_S_whichword(unsigned long long) [263] std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<int, false> > >::~_Hashtable_alloc()
 [133] std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::size() const [217] void std::_Destroy_aux<true>::__destroy<int*>(int*, int*) [28] std::__detail::_Node_iterator_base<int, false>::_M_incr()
 [201] std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_begin() const [218] std::_Vector_base<int, std::allocator<int> >::_M_allocate(unsigned long long) [124] std::__detail::_Node_iterator_base<int, false>::_Node_iterator_base(std::__detail::_Hash_node<int, false>*)
 [158] std::_Base_bitset<12500ull>::_M_getword(unsigned long long) const [219] std::_Vector_base<int, std::allocator<int> >::_Vector_impl::_Vector_impl(std::allocator<int> const&) [175] std::__detail::_Node_const_iterator<int, true, false>::_Node_const_iterator(std::__detail::_Node_iterator<int, true, false> const&)
   [8] std::_Base_bitset<6250ull>::_M_getword(unsigned long long) const [220] std::_Vector_base<int, std::allocator<int> >::_Vector_impl::~_Vector_impl() [264] std::__detail::_Prime_rehash_policy::_Prime_rehash_policy(float)
 [121] std::hash<int>::operator()(int) const [221] std::_Vector_base<int, std::allocator<int> >::_M_deallocate(int*, unsigned long long) [151] std::__detail::_Hash_node_value_base<int>::_M_valptr()
   [6] std::bitset<200000ull>::_Unchecked_test(unsigned long long) const [222] std::_Vector_base<int, std::allocator<int> >::_M_create_storage(unsigned long long) [131] std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<int, false> >, true>::_M_get()
   [5] std::bitset<200000ull>::test(unsigned long long) const [223] std::_Vector_base<int, std::allocator<int> >::_Vector_impl_data::_Vector_impl_data() [265] std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<int, false> >, true>::_Hashtable_ebo_helper()
  [11] std::bitset<200000ull>::_M_check(unsigned long long, char const*) const [215] std::_Vector_base<int, std::allocator<int> >::_M_get_Tp_allocator() [266] std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<int, false> >, true>::~_Hashtable_ebo_helper()
 [159] std::bitset<400000ull>::_Unchecked_test(unsigned long long) const [224] std::_Vector_base<int, std::allocator<int> >::_Vector_base(unsigned long long, std::allocator<int> const&) [267] std::__detail::_Hashtable_ebo_helper<0, std::equal_to<int>, true>::_Hashtable_ebo_helper()
 [160] std::bitset<400000ull>::test(unsigned long long) const [225] std::_Vector_base<int, std::allocator<int> >::~_Vector_base() [268] std::__detail::_Hashtable_ebo_helper<1, std::hash<int>, true>::_Hashtable_ebo_helper()
 [139] std::bitset<400000ull>::_M_check(unsigned long long, char const*) const [156] std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> >::end() [135] std::__detail::_Hashtable_hash_traits<std::hash<int> >::__small_size_threshold()
 [250] std::vector<int, std::allocator<int> >::end() const [41] std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> >::find(int const&) [157] std::__detail::operator!=(std::__detail::_Node_iterator_base<int, false> const&, std::__detail::_Node_iterator_base<int, false> const&)
 [251] std::vector<int, std::allocator<int> >::begin() const [24] std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> >::insert(std::__detail::_Node_const_iterator<int, true, false>, int const&) [234] void std::_Construct<int>(int*)
 [140] std::vector<int, std::allocator<int> >::operator[](unsigned long long) const [254] std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> >::unordered_set() [235] int* std::__fill_n_a<int*, unsigned long long, int>(int*, unsigned long long, int const&, std::random_access_iterator_tag)
 [177] std::__detail::_Hash_node<int, false>* std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<int, false> > >::operator()<int const&>(int const&) const [33] std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> >::~unordered_set() [192] std::__detail::_Hash_node<int, false>* std::__addressof<std::__detail::_Hash_node<int, false> >(std::__detail::_Hash_node<int, false>&)
  [13] std::__detail::_Hash_node<int, false>::_M_next() const [182] std::__new_allocator<std::__detail::_Hash_node<int, false> >::deallocate(std::__detail::_Hash_node<int, false>*, unsigned long long) [211] std::__detail::_Hash_node_base** std::__addressof<std::__detail::_Hash_node_base*>(std::__detail::_Hash_node_base*&)
 [129] std::__detail::_Hash_code_base<int, int, std::__detail::_Identity, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_hash_code(int const&) const [183] std::__new_allocator<std::__detail::_Hash_node<int, false> >::allocate(unsigned long long, void const*) [269] std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> >* std::__addressof<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > >(std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> >&)
 [178] std::__detail::_Hash_code_base<int, int, std::__detail::_Identity, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_store_code(std::__detail::_Hash_node_code_cache<false>&, unsigned long long) const [255] std::__new_allocator<std::__detail::_Hash_node<int, false> >::~__new_allocator() [236] int* std::__addressof<int>(int&)
 [136] std::__detail::_Hash_code_base<int, int, std::__detail::_Identity, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(std::__detail::_Hash_node_value<int, false> const&, unsigned long long) const [206] std::__new_allocator<std::__detail::_Hash_node_base*>::deallocate(std::__detail::_Hash_node_base**, unsigned long long) [248] __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > std::__miter_base<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
 [138] std::__detail::_Hash_code_base<int, int, std::__detail::_Identity, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(unsigned long long, unsigned long long) const [207] std::__new_allocator<std::__detail::_Hash_node_base*>::allocate(unsigned long long, void const*) [249] int const* std::__niter_base<int const*, std::vector<int, std::allocator<int> > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >)
 [161] unsigned long long std::__detail::_Hash_code_base<int, int, std::__detail::_Identity, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_hash_code_tr<int>(int const&) const [200] std::__new_allocator<std::__detail::_Hash_node_base*>::~__new_allocator() [270] std::insert_iterator<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > > std::__niter_base<std::insert_iterator<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > > >(std::insert_iterator<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > >)
 [122] std::__detail::_Hash_code_base<int, int, std::__detail::_Identity, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_hash() const [226] std::__new_allocator<int>::deallocate(int*, unsigned long long) [271] std::insert_iterator<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > > std::__niter_wrap<std::insert_iterator<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > > >(std::insert_iterator<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > > const&, std::insert_iterator<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > >)
 [196] bool std::__detail::_Hashtable_base<int, int, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, true, true> >::_M_equals_tr<int>(int const&, unsigned long long, std::__detail::_Hash_node_value<int, false> const&) const [227] std::__new_allocator<int>::allocate(unsigned long long, void const*) [193] std::__detail::_Hash_node<int, false>* std::__to_address<std::__detail::_Hash_node<int, false> >(std::__detail::_Hash_node<int, false>*)
 [152] std::__detail::_Hashtable_base<int, int, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, true, true> >::_M_key_equals(int const&, std::__detail::_Hash_node_value<int, false> const&) const [214] std::__new_allocator<int>::~__new_allocator() [212] std::__detail::_Hash_node_base** std::__to_address<std::__detail::_Hash_node_base*>(std::__detail::_Hash_node_base**)
 [197] bool std::__detail::_Hashtable_base<int, int, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, true, true> >::_M_key_equals_tr<int>(int const&, std::__detail::_Hash_node_value<int, false> const&) const [256] std::insert_iterator<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > >::insert_iterator(std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> >&, std::__detail::_Node_iterator<int, true, false>) [16] std::insert_iterator<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > > std::__copy_move_a<false, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, std::insert_iterator<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, std::insert_iterator<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > >)
 [144] std::__detail::_Hashtable_base<int, int, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, true, true> >::_M_eq() const [14] std::insert_iterator<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > >::operator=(int const&) [17] std::insert_iterator<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > > std::__copy_move_a1<false, int const*, std::insert_iterator<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > > >(int const*, int const*, std::insert_iterator<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > >)
 [153] std::__detail::_Hashtable_base<int, int, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, true, true> >::_M_equals(int const&, unsigned long long, std::__detail::_Hash_node_value<int, false> const&) const [167] std::insert_iterator<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > >::operator*() [18] std::insert_iterator<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > > std::__copy_move_a2<false, int const*, std::insert_iterator<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > > >(int const*, int const*, std::insert_iterator<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > >)
 [120] std::__detail::_Mod_range_hashing::operator()(unsigned long long, unsigned long long) const [168] std::insert_iterator<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > >::operator++() [237] std::__size_to_integer(unsigned long long)
 [162] int const& std::__detail::_ConvertToValueType<std::__detail::_Identity, int>::operator()<int const&>(int const&) const [184] std::__ptr_traits_ptr_to<std::__detail::_Hash_node<int, false>*, std::__detail::_Hash_node<int, false>, false>::pointer_to(std::__detail::_Hash_node<int, false>&) [238] int* std::__uninitialized_default_n<int*, unsigned long long>(int*, unsigned long long)
 [179] std::__detail::_Prime_rehash_policy::_M_state() const [208] std::__ptr_traits_ptr_to<std::__detail::_Hash_node_base**, std::__detail::_Hash_node_base*, false>::pointer_to(std::__detail::_Hash_node_base*&) [239] int* std::__uninitialized_default_n_a<int*, unsigned long long, int>(int*, unsigned long long, std::allocator<int>&)
 [127] std::__detail::_Hash_node_value_base<int>::_M_v() const [228] int* std::__uninitialized_default_n_1<true>::__uninit_default_n<int*, unsigned long long>(int*, unsigned long long) [240] unsigned long long const& std::min<unsigned long long>(unsigned long long const&, unsigned long long const&)
 [128] std::__detail::_Hash_node_value_base<int>::_M_valptr() const [185] std::pair<std::__detail::_Node_iterator<int, true, false>, bool>::pair<std::__detail::_Node_iterator<int, true, false>&, bool, true>(std::__detail::_Node_iterator<int, true, false>&, bool&&) [19] std::insert_iterator<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > > std::copy<__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, std::insert_iterator<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > > >(__gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int const*, std::vector<int, std::allocator<int> > >, std::insert_iterator<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > >)
 [145] std::__detail::_Hashtable_ebo_helper<0, std::equal_to<int>, true>::_M_cget() const [198] std::pair<std::__detail::_Node_iterator<int, true, false>, bool>::pair<std::__detail::_Node_iterator<int, true, false>, bool, true>(std::__detail::_Node_iterator<int, true, false>&&, bool&&) [272] void std::fill<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)
 [123] std::__detail::_Hashtable_ebo_helper<1, std::hash<int>, true>::_M_cget() const [43] std::bitset<200000ull>::_Unchecked_set(unsigned long long, int) [241] int* std::fill_n<int*, unsigned long long, int>(int*, unsigned long long, int const&)
 [119] int const& std::__detail::_Identity::operator()<int const&>(int const&) const [42] std::bitset<200000ull>::set(unsigned long long, bool) [199] std::__detail::_Node_iterator<int, true, false>&& std::forward<std::__detail::_Node_iterator<int, true, false> >(std::remove_reference<std::__detail::_Node_iterator<int, true, false> >::type&)
 [146] std::equal_to<int>::operator()(int const&, int const&) const [169] std::bitset<200000ull>::reset() [118] int const& std::forward<int const&>(std::remove_reference<int const&>::type&)
 [180] std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_Scoped_node::_Scoped_node(std::__detail::_Hash_node<int, false>*, std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<int, false> > >*) [170] std::bitset<400000ull>::_Unchecked_set(unsigned long long, int) [194] std::__detail::_Node_iterator<int, true, false>& std::forward<std::__detail::_Node_iterator<int, true, false>&>(std::remove_reference<std::__detail::_Node_iterator<int, true, false>&>::type&)
 [181] std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_Scoped_node::~_Scoped_node() [171] std::bitset<400000ull>::set(unsigned long long, bool) [176] bool&& std::forward<bool>(std::remove_reference<bool>::type&)
  [29] std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_rehash_aux(unsigned long long, std::integral_constant<bool, true>) [172] std::bitset<400000ull>::reset() [242] void std::_Destroy<int*>(int*, int*)
 [163] std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_S_forward_key(int const&) [229] std::vector<int, std::allocator<int> >::_S_max_size(std::allocator<int> const&) [273] void std::__fill_a<__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)
  [20] std::pair<std::__detail::_Node_iterator<int, true, false>, bool> std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert_unique<int const&, int const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<int, false> > > >(int const&, int const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<int, false> > > const&) [230] std::vector<int, std::allocator<int> >::_S_check_init_len(unsigned long long, std::allocator<int> const&) [243] void std::__fill_a<int*, int>(int*, int*, int const&)
 [205] std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_allocate_buckets(unsigned long long) [231] std::vector<int, std::allocator<int> >::_M_default_initialize(unsigned long long) [274] std::insert_iterator<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > > std::inserter<std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> > >(std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> >&, std::unordered_set<int, std::hash<int>, std::equal_to<int>, std::allocator<int> >::iterator)
  [21] std::pair<std::__detail::_Node_iterator<int, true, false>, bool> std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert_unique_aux<int const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<int, false> > > >(int const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<int, false> > > const&) [257] std::vector<int, std::allocator<int> >::end() [275] void std::__fill_a1<int*, std::vector<int, std::allocator<int> >, int>(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, __gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >, int const&)
 [203] std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned long long) [258] std::vector<int, std::allocator<int> >::begin() [216] __gnu_cxx::__enable_if<std::__is_scalar<int>::__value, void>::__type std::__fill_a1<int*, int>(int*, int*, int const&)
 [204] std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_deallocate_buckets() [232] std::vector<int, std::allocator<int> >::vector(unsigned long long, std::allocator<int> const&) [195] std::__detail::_Hash_node<int, false>* std::addressof<std::__detail::_Hash_node<int, false> >(std::__detail::_Hash_node<int, false>&)
  [26] std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert_unique_node(unsigned long long, unsigned long long, std::__detail::_Hash_node<int, false>*, unsigned long long) [233] std::vector<int, std::allocator<int> >::~vector() [213] std::__detail::_Hash_node_base** std::addressof<std::__detail::_Hash_node_base*>(std::__detail::_Hash_node_base*&)
  [37] std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert_bucket_begin(unsigned long long, std::__detail::_Hash_node<int, false>*) [12] std::vector<int, std::allocator<int> >::operator[](unsigned long long) [148] operator new(unsigned long long, void*)
 [134] std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::__small_size_threshold() [173] std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<int, false> > >::_AllocNode(std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<int, false> > >&) [4] __fentry__
 [155] std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::end() [186] std::__detail::_Hash_node<int, false>::_Hash_node() [276] __gcc_deregister_frame
  [40] std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::find(int const&) [174] std::__detail::_Insert_base<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_conjure_hashtable() [1] _mcount_private
 [252] std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::begin() [25] std::__detail::_Insert_base<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::insert(std::__detail::_Node_const_iterator<int, true, false>, int const&)
  [31] std::_Hashtable<int, int, std::allocator<int>, std::__detail::_Identity, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::clear() [187] std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<int, false> > >::__node_type* std::__detail::_NodeBuilder<std::__detail::_Identity>::_S_build<int const&, int const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<int, false> > > >(int const&, int const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<int, false> > > const&)
